// Created by libAntimony v2.13.2
model *maher1()

  // Compartments and Species:
  species $XX, amp, ampE, arg, argE, argQ, argQE, argR, argRE, as, asE, asR;
  species asRE, asp, aspE, $asppool, atp, atpE, $atppool, cit, citE, citR;
  species citRE, citims, citimsR, citmat, citmatR, cp, cpR, cpe, cpeE, cpeR;
  species cpeRE, cpims, cpimsR, $cppool, fum, fumE, orn, ornE, ornims, ornmat;
  species pi_, ppi, ppiE, ure, ureE, ureR, ureRE;

  // Reactions:
  v_1: 148445 ornmat + 148445 cp -> 148445 pi_ + 148445 citmat; (otcAdj*k1e1*k3e1*k5e1*k7e1*cp*ornmat*e10/(k2e1*k7e1*(k4e1 + k5e1) + k1e1*k7e1*(k4e1 + k5e1)*(cp + cpR) + k2e1*k8e1*(k4e1 + k5e1)*pi_ + k3e1*k5e1*k7e1*ornmat + k2e1*k4e1*k6e1*(citmat + citmatR) + k1e1*k3e1*(k5e1 + k7e1)*(cp + cpR)*ornmat + k6e1*k8e1*(k2e1 + k4e1)*pi_*(citmat + citmatR) + k1e1*k4e1*k6e1*(cp + cpR)*(citmat + citmatR) + k1e1*k3e1*k6e1*(cp + cpR)*ornmat*(citmat + citmatR) + k3e1*k5e1*k8e1*ornmat*pi_ + k3e1*k6e1*k8e1*ornmat*pi_*(citmat + citmatR)))*matV - (otcAdj*k2e1*k4e1*k6e1*k8e1*citmat*pi_*e10/(k2e1*k7e1*(k4e1 + k5e1) + k1e1*k7e1*(k4e1 + k5e1)*(cp + cpR) + k2e1*k8e1*(k4e1 + k5e1)*pi_ + k3e1*k5e1*k7e1*ornmat + k2e1*k4e1*k6e1*(citmat + citmatR) + k1e1*k3e1*(k5e1 + k7e1)*(cp + cpR)*ornmat + k6e1*k8e1*(k2e1 + k4e1)*pi_*(citmat + citmatR) + k1e1*k4e1*k6e1*(cp + cpR)*(citmat + citmatR) + k1e1*k3e1*k6e1*(cp + cpR)*ornmat*(citmat + citmatR) + k3e1*k5e1*k8e1*ornmat*pi_ + k3e1*k6e1*k8e1*ornmat*pi_*(citmat + citmatR)))*matV;
  v_10: 40395.6 asR -> 40395.6 fum + 40395.6 argR; (aslAdj*k1e3*k3e3*k5e3*asR*e30/(k5e3*(k2e3 + k3e3) + (as + asR)*k1e3*(k3e3 + k5e3) + fum*k2e3*k4e3 + (arg + argR + fm*argQ)*k6e3*(k2e3 + k3e3) + fum*(arg + argR + fm*argQ)*k4e3*k6e3 + (as + asR + fm*argQ)*fum*k1e3*k4e3))*cytV - (aslAdj*k2e3*k4e3*k6e3*fum*argR*e30/(k5e3*(k2e3 + k3e3) + (as + asR)*k1e3*(k3e3 + k5e3) + fum*k2e3*k4e3 + (arg + argR + fm*argQ)*k6e3*(k2e3 + k3e3) + fum*(arg + argR + fm*argQ)*k4e3*k6e3 + (as + asR + fm*argQ)*fum*k1e3*k4e3))*cytV;
  v_11: 40395.6 arg -> 40395.6 ure + 40395.6 orn; (argfac*k1e4*k3e4*k4e4*arg*e40/(k4e4*(k2e4 + k3e4) + k5e4*(k2e4 + k3e4)*orn + k1e4*(k3e4 + k4e4)*(arg + argR + fm*argQ)))*cytV;
  v_12: 40395.6 argR -> 40395.6 ureR + 40395.6 orn; (argfac*k1e4*k3e4*k4e4*argR*e40/(k4e4*(k2e4 + k3e4) + k5e4*(k2e4 + k3e4)*orn + k1e4*(k3e4 + k4e4)*(arg + argR + fm*argQ)))*cytV;
  v_13: 40395.6 argQ -> 40395.6 ure + 40395.6 orn; (argfac*fm*k1e4*k3e4*k4e4*argQ*e40/(k4e4*(k2e4 + k3e4) + k5e4*(k2e4 + k3e4)*orn + k1e4*(k3e4 + k4e4)*(arg + argR + fm*argQ)))*cytV;
  v_14: 509.861 argE -> 509.861 ureE + 509.861 ornE; (argfac*k1e4*k3e4*k4e4*argE*e40E/(k4e4*(k2e4 + k3e4) + k5e4*(k2e4 + k3e4)*ornE + k1e4*(k3e4 + k4e4)*(argE + argRE + fmE*argQE)))*eV;
  v_15: 509.861 argRE -> 509.861 ureRE + 509.861 ornE; (argfac*k1e4*k3e4*k4e4*argRE*e40E/(k4e4*(k2e4 + k3e4) + k5e4*(k2e4 + k3e4)*ornE + k1e4*(k3e4 + k4e4)*(argE + argRE + fmE*argQE)))*eV;
  v_16: 509.861 argQE -> 509.861 ureE + 509.861 ornE; (argfac*fm*k1e4*k3e4*k4e4*argQE*e40E/(k4e4*(k2e4 + k3e4) + k5e4*(k2e4 + k3e4)*ornE + k1e4*(k3e4 + k4e4)*(argE + argRE + fmE*argQE)))*eV;
  v_17: 40395.6 orn -> 244266 ornims; kornci*orn*cytV - kornic*ornims*imsV;
  v_18: 244266 ornims -> 148445 ornmat; kornim*ornims*imsV - kornmi*ornmat*matV;
  v_19: 509.861 $cppool -> 509.861 cpeE; kcp*cppool*eV;
  v_2: 148445 ornmat + 148445 cpR -> 148445 pi_ + 148445 citmatR; (otcAdj*k1e1*k3e1*k5e1*k7e1*cpR*ornmat*e10/(k2e1*k7e1*(k4e1 + k5e1) + k1e1*k7e1*(k4e1 + k5e1)*(cp + cpR) + k2e1*k8e1*(k4e1 + k5e1)*pi_ + k3e1*k5e1*k7e1*ornmat + k2e1*k4e1*k6e1*(citmat + citmatR) + k1e1*k3e1*(k5e1 + k7e1)*(cp + cpR)*ornmat + k6e1*k8e1*(k2e1 + k4e1)*pi_*(citmat + citmatR) + k1e1*k4e1*k6e1*(cp + cpR)*(citmat + citmatR) + k1e1*k3e1*k6e1*(cp + cpR)*ornmat*(citmat + citmatR) + k3e1*k5e1*k8e1*ornmat*pi_ + k3e1*k6e1*k8e1*ornmat*pi_*(citmat + citmatR)))*matV - (otcAdj*k2e1*k4e1*k6e1*k8e1*citmatR*pi_*e10/(k2e1*k7e1*(k4e1 + k5e1) + k1e1*k7e1*(k4e1 + k5e1)*(cp + cpR) + k2e1*k8e1*(k4e1 + k5e1)*pi_ + k3e1*k5e1*k7e1*ornmat + k2e1*k4e1*k6e1*(citmat + citmatR) + k1e1*k3e1*(k5e1 + k7e1)*(cp + cpR)*ornmat + k6e1*k8e1*(k2e1 + k4e1)*pi_*(citmat + citmatR) + k1e1*k4e1*k6e1*(cp + cpR)*(citmat + citmatR) + k1e1*k3e1*k6e1*(cp + cpR)*ornmat*(citmat + citmatR) + k3e1*k5e1*k8e1*ornmat*pi_ + k3e1*k6e1*k8e1*ornmat*pi_*(citmat + citmatR)))*matV;
  v_20: 40395.6 cpe -> 244266 cpims; kcpei*cpe*cytV - kcpie*cpims*imsV;
  v_21: 244266 cpims -> 148445 cp; kcpim*cpims*imsV - kcpmi*cp*matV;
  v_22: 40395.6 cpeR -> 244266 cpimsR; kcpei*cpeR*cytV - kcpie*cpimsR*imsV;
  v_23: 244266 cpimsR -> 148445 cpR; kcpim*cpimsR*imsV - kcpmi*cpR*matV;
  v_24: 40395.6 $atppool -> 40395.6 atp; katp*atppool*cytV;
  v_25: 40395.6 $asppool -> 40395.6 asp; kasp*asppool*cytV;
  v_26: 40395.6 ppi -> $XX; kppi*ppi*cytV;
  v_27: 40395.6 fum -> $XX; kfum*fum*cytV;
  v_28: 148445 pi_ -> $XX; kpi*pi_*matV;
  v_29: 40395.6 amp -> $XX; kamp*amp*cytV;
  v_3: 148445 citmat -> 244266 citims; kcitmi*citmat*matV - kcitim*citims*imsV;
  v_30: 40395.6 ure -> $XX; kure*ure*cytV;
  v_31: 40395.6 ureR -> $XX; 0*kure*ureR*cytV;
  v_32: 40395.6 cit -> 509.861 citE; kcitCE*cit*cytV - kcitCEREV*citE*eV;
  v_33: 40395.6 citR -> 509.861 citRE; kcitRCE*citR*cytV - kcitRCEREV*citRE*eV;
  v_34: 40395.6 atp -> 509.861 atpE; katpCE*atp*cytV - katpCEREV*atpE*eV;
  v_35: 40395.6 asp -> 509.861 aspE; kaspCE*asp*cytV - kaspCEREV*aspE*eV;
  v_36: 40395.6 amp -> 509.861 ampE; kampCE*amp*cytV - kampCEREV*ampE*eV;
  v_37: 40395.6 ppi -> 509.861 ppiE; kppiCE*ppi*cytV - kppiCEREV*ppiE*eV;
  v_38: 40395.6 as -> 509.861 asE; kasCE*as*cytV - kasCEREV*asE*eV;
  v_39: 40395.6 asR -> 509.861 asRE; kasRCE*asR*cytV - kasRCEREV*asRE*eV;
  v_4: 148445 citmatR -> 244266 citimsR; kcitmi*citmatR*matV - kcitim*citimsR*imsV;
  v_40: 40395.6 fum -> 509.861 fumE; kfumCE*fum*cytV - kfumCEREV*fumE*eV;
  v_41: 40395.6 argQ -> 509.861 argQE; kargQCE*argQ*cytV - kargQCEREV*argQE*eV;
  v_42: 40395.6 arg -> 509.861 argE; kargCE*arg*cytV - kargCEREV*argE*eV;
  v_43: 40395.6 argR -> 509.861 argRE; kargRCE*argR*cytV - kargRCEREV*argRE*eV;
  v_44: 40395.6 ure -> 509.861 ureE; kureCE*ure*cytV - kureCEREV*ureE*eV;
  v_45: 40395.6 ureR -> 509.861 ureRE; kureRCE*ureR*cytV - kureRCEREV*ureRE*eV;
  v_46: 40395.6 orn -> 509.861 ornE; kornCE*orn*cytV - kornCEREV*ornE*eV;
  v_47: 40395.6 cpe -> 509.861 cpeE; kcpeCE*cpe*cytV - kcpeCEREV*cpeE*eV;
  v_48: 40395.6 cpeR -> 509.861 cpeRE; kcpeRCE*cpeR*cytV - kcpeRCEREV*cpeRE*eV;
  v_5: 244266 citims -> 40395.6 cit; kcitic*citims*imsV - kcitci*cit*cytV;
  v_6: 244266 citimsR -> 40395.6 citR; kcitic*citimsR*imsV - kcitci*citR*cytV;
  v_7: 40395.6 cit + 40395.6 atp + 40395.6 asp -> 40395.6 ppi + 40395.6 as + 40395.6 amp; (k1e2*k3e2*k5e2*k7e2*k9e2*k11e2*cit*atp*asp*assAdj*e20*(1 + (arg + argR + argQ)/Kiarg)^-1/(k2e2*k4e2*k9e2*k11e2*(k6e2 + k7e2) + k1e2*k4e2*k6e2*k8e2*k11e2*(cit + citR)*ppi + k1e2*k4e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR) + k2e2*k5e2*k7e2*k9e2*k12e2*asp*(as + asR) + k2e2*k5e2*k7e2*k9e2*k11e2*asp + k1e2*k3e2*k6e2*k8e2*k11e2*(cit + citR)*atp*ppi + k1e2*k3e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR)*atp + k1e2*k4e2*k6e2*k8e2*k10e2*(cit + citR)*ppi*amp + k1e2*k5e2*k7e2*k9e2*k11e2*(cit + citR)*asp + k3e2*k5e2*k7e2*k9e2*k12e2*atp*asp*(as + asR) + k3e2*k5e2*k7e2*k9e2*k11e2*atp*asp + k2e2*k5e2*k7e2*k10e2*k12e2*asp*amp*(as + asR) + k1e2*k3e2*k5e2*(k7e2*k9e2 + k7e2*k11e2 + k9e2*k11e2)*(cit + citR)*atp*asp + k1e2*k3e2*k5e2*k8e2*k11e2*(cit + citR)*atp*asp*ppi + k2e2*k4e2*k6e2*k8e2*k11e2*ppi + k1e2*k3e2*k5e2*k7e2*k10e2*(cit + citR)*atp*asp*amp + k2e2*k4e2*k9e2*k12e2*(k6e2 + k7e2)*(as + asR) + k1e2*k3e2*k6e2*k8e2*k10e2*(cit + citR)*atp*ppi*amp + k2e2*k4e2*k6e2*k8e2*k10e2*ppi*amp + k3e2*k5e2*k7e2*k10e2*k12e2*atp*asp*amp*(as + asR) + k2e2*k4e2*k6e2*k8e2*k12e2*ppi*(as + asR) + k3e2*k6e2*k8e2*k10e2*k12e2*atp*ppi*amp*(as + asR) + k2e2*k4e2*k10e2*k12e2*(k6e2 + k7e2)*amp*(as + asR) + k2e2*k5e2*k8e2*k10e2*k12e2*asp*ppi*amp*(as + asR) + k8e2*k10e2*k12e2*(k2e2*k4e2 + k2e2*k6e2 + k4e2*k6e2)*ppi*amp*(as + asR) + k1e2*k3e2*k5e2*k8e2*k10e2*(cit + citR)*atp*asp*ppi*amp + k3e2*k5e2*k8e2*k10e2*k12e2*atp*asp*ppi*amp*(as + asR)))*cytV - (k2e2*k4e2*k6e2*k8e2*k10e2*k12e2*ppi*amp*as*assAdj*e20*(1 + (arg + argR + argQ)/Kiarg)^-1/(k2e2*k4e2*k9e2*k11e2*(k6e2 + k7e2) + k1e2*k4e2*k6e2*k8e2*k11e2*(cit + citR)*ppi + k1e2*k4e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR) + k2e2*k5e2*k7e2*k9e2*k12e2*asp*(as + asR) + k2e2*k5e2*k7e2*k9e2*k11e2*asp + k1e2*k3e2*k6e2*k8e2*k11e2*(cit + citR)*atp*ppi + k1e2*k3e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR)*atp + k1e2*k4e2*k6e2*k8e2*k10e2*(cit + citR)*ppi*amp + k1e2*k5e2*k7e2*k9e2*k11e2*(cit + citR)*asp + k3e2*k5e2*k7e2*k9e2*k12e2*atp*asp*(as + asR) + k3e2*k5e2*k7e2*k9e2*k11e2*atp*asp + k2e2*k5e2*k7e2*k10e2*k12e2*asp*amp*(as + asR) + k1e2*k3e2*k5e2*(k7e2*k9e2 + k7e2*k11e2 + k9e2*k11e2)*(cit + citR)*atp*asp + k1e2*k3e2*k5e2*k8e2*k11e2*(cit + citR)*atp*asp*ppi + k2e2*k4e2*k6e2*k8e2*k11e2*ppi + k1e2*k3e2*k5e2*k7e2*k10e2*(cit + citR)*atp*asp*amp + k2e2*k4e2*k9e2*k12e2*(k6e2 + k7e2)*(as + asR) + k1e2*k3e2*k6e2*k8e2*k10e2*(cit + citR)*atp*ppi*amp + k2e2*k4e2*k6e2*k8e2*k10e2*ppi*amp + k3e2*k5e2*k7e2*k10e2*k12e2*atp*asp*amp*(as + asR) + k2e2*k4e2*k6e2*k8e2*k12e2*ppi*(as + asR) + k3e2*k6e2*k8e2*k10e2*k12e2*atp*ppi*amp*(as + asR) + k2e2*k4e2*k10e2*k12e2*(k6e2 + k7e2)*amp*(as + asR) + k2e2*k5e2*k8e2*k10e2*k12e2*asp*ppi*amp*(as + asR) + k8e2*k10e2*k12e2*(k2e2*k4e2 + k2e2*k6e2 + k4e2*k6e2)*ppi*amp*(as + asR) + k1e2*k3e2*k5e2*k8e2*k10e2*(cit + citR)*atp*asp*ppi*amp + k3e2*k5e2*k8e2*k10e2*k12e2*atp*asp*ppi*amp*(as + asR)))*cytV;
  v_8: 40395.6 citR + 40395.6 atp + 40395.6 asp -> 40395.6 ppi + 40395.6 asR + 40395.6 amp; (k1e2*k3e2*k5e2*k7e2*k9e2*k11e2*citR*atp*asp*assAdj*e20*(1 + (arg + argR + argQ)/Kiarg)^-1/(k2e2*k4e2*k9e2*k11e2*(k6e2 + k7e2) + k1e2*k4e2*k6e2*k8e2*k11e2*(cit + citR)*ppi + k1e2*k4e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR) + k2e2*k5e2*k7e2*k9e2*k12e2*asp*(as + asR) + k2e2*k5e2*k7e2*k9e2*k11e2*asp + k1e2*k3e2*k6e2*k8e2*k11e2*(cit + citR)*atp*ppi + k1e2*k3e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR)*atp + k1e2*k4e2*k6e2*k8e2*k10e2*(cit + citR)*ppi*amp + k1e2*k5e2*k7e2*k9e2*k11e2*(cit + citR)*asp + k3e2*k5e2*k7e2*k9e2*k12e2*atp*asp*(as + asR) + k3e2*k5e2*k7e2*k9e2*k11e2*atp*asp + k2e2*k5e2*k7e2*k10e2*k12e2*asp*amp*(as + asR) + k1e2*k3e2*k5e2*(k7e2*k9e2 + k7e2*k11e2 + k9e2*k11e2)*(cit + citR)*atp*asp + k1e2*k3e2*k5e2*k8e2*k11e2*(cit + citR)*atp*asp*ppi + k2e2*k4e2*k6e2*k8e2*k11e2*ppi + k1e2*k3e2*k5e2*k7e2*k10e2*(cit + citR)*atp*asp*amp + k2e2*k4e2*k9e2*k12e2*(k6e2 + k7e2)*(as + asR) + k1e2*k3e2*k6e2*k8e2*k10e2*(cit + citR)*atp*ppi*amp + k2e2*k4e2*k6e2*k8e2*k10e2*ppi*amp + k3e2*k5e2*k7e2*k10e2*k12e2*atp*asp*amp*(as + asR) + k2e2*k4e2*k6e2*k8e2*k12e2*ppi*(as + asR) + k3e2*k6e2*k8e2*k10e2*k12e2*atp*ppi*amp*(as + asR) + k2e2*k4e2*k10e2*k12e2*(k6e2 + k7e2)*amp*(as + asR) + k2e2*k5e2*k8e2*k10e2*k12e2*asp*ppi*amp*(as + asR) + k8e2*k10e2*k12e2*(k2e2*k4e2 + k2e2*k6e2 + k4e2*k6e2)*ppi*amp*(as + asR) + k1e2*k3e2*k5e2*k8e2*k10e2*(cit + citR)*atp*asp*ppi*amp + k3e2*k5e2*k8e2*k10e2*k12e2*atp*asp*ppi*amp*(as + asR)))*cytV - (k2e2*k4e2*k6e2*k8e2*k10e2*k12e2*ppi*amp*asR*assAdj*e20*(1 + (arg + argR + argQ)/Kiarg)^-1/(k2e2*k4e2*k9e2*k11e2*(k6e2 + k7e2) + k1e2*k4e2*k6e2*k8e2*k11e2*(cit + citR)*ppi + k1e2*k4e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR) + k2e2*k5e2*k7e2*k9e2*k12e2*asp*(as + asR) + k2e2*k5e2*k7e2*k9e2*k11e2*asp + k1e2*k3e2*k6e2*k8e2*k11e2*(cit + citR)*atp*ppi + k1e2*k3e2*k9e2*k11e2*(k6e2 + k7e2)*(cit + citR)*atp + k1e2*k4e2*k6e2*k8e2*k10e2*(cit + citR)*ppi*amp + k1e2*k5e2*k7e2*k9e2*k11e2*(cit + citR)*asp + k3e2*k5e2*k7e2*k9e2*k12e2*atp*asp*(as + asR) + k3e2*k5e2*k7e2*k9e2*k11e2*atp*asp + k2e2*k5e2*k7e2*k10e2*k12e2*asp*amp*(as + asR) + k1e2*k3e2*k5e2*(k7e2*k9e2 + k7e2*k11e2 + k9e2*k11e2)*(cit + citR)*atp*asp + k1e2*k3e2*k5e2*k8e2*k11e2*(cit + citR)*atp*asp*ppi + k2e2*k4e2*k6e2*k8e2*k11e2*ppi + k1e2*k3e2*k5e2*k7e2*k10e2*(cit + citR)*atp*asp*amp + k2e2*k4e2*k9e2*k12e2*(k6e2 + k7e2)*(as + asR) + k1e2*k3e2*k6e2*k8e2*k10e2*(cit + citR)*atp*ppi*amp + k2e2*k4e2*k6e2*k8e2*k10e2*ppi*amp + k3e2*k5e2*k7e2*k10e2*k12e2*atp*asp*amp*(as + asR) + k2e2*k4e2*k6e2*k8e2*k12e2*ppi*(as + asR) + k3e2*k6e2*k8e2*k10e2*k12e2*atp*ppi*amp*(as + asR) + k2e2*k4e2*k10e2*k12e2*(k6e2 + k7e2)*amp*(as + asR) + k2e2*k5e2*k8e2*k10e2*k12e2*asp*ppi*amp*(as + asR) + k8e2*k10e2*k12e2*(k2e2*k4e2 + k2e2*k6e2 + k4e2*k6e2)*ppi*amp*(as + asR) + k1e2*k3e2*k5e2*k8e2*k10e2*(cit + citR)*atp*asp*ppi*amp + k3e2*k5e2*k8e2*k10e2*k12e2*atp*asp*ppi*amp*(as + asR)))*cytV;
  v_9: 40395.6 as -> 40395.6 fum + 40395.6 arg; (aslAdj*k1e3*k3e3*k5e3*as*e30/(k5e3*(k2e3 + k3e3) + (as + asR)*k1e3*(k3e3 + k5e3) + fum*k2e3*k4e3 + (arg + argR + fm*argQ)*k6e3*(k2e3 + k3e3) + fum*(arg + argR + fm*argQ)*k4e3*k6e3 + (as + asR + fm*argQ)*fum*k1e3*k4e3))*cytV - (aslAdj*k2e3*k4e3*k6e3*fum*arg*e30/(k5e3*(k2e3 + k3e3) + (as + asR)*k1e3*(k3e3 + k5e3) + fum*k2e3*k4e3 + (arg + argR + fm*argQ)*k6e3*(k2e3 + k3e3) + fum*(arg + argR + fm*argQ)*k4e3*k6e3 + (as + asR + fm*argQ)*fum*k1e3*k4e3))*cytV;

  // Species initializations:
  XX = 0;
  amp = 1e-06;
  ampE = 1e-06;
  arg = 1e-06;
  argE = 1e-06;
  argQ = 0;
  argQE = 0;
  argR = 0;
  argRE = 0;
  as = 1e-06;
  asE = 1e-06;
  asR = 0;
  asRE = 0;
  asp = 0.0001;
  aspE = 0.0001;
  asppool = 0.001;
  atp = 0.0015;
  atpE = 0.0015;
  atppool = 0.002;
  cit = 1e-06;
  citE = 1e-06;
  citR = 0;
  citRE = 0;
  citims = 1e-06;
  citimsR = 0;
  citmat = 1e-06;
  citmatR = 0;
  cp = 1e-05;
  cpR = 0;
  cpe = 1e-05;
  cpeE = 0.0005;
  cpeR = 0;
  cpeRE = 2.26667e-06;
  cpims = 1e-05;
  cpimsR = 0;
  cppool = 0.015;
  fum = 1e-06;
  fumE = 1e-06;
  orn = 0.0002;
  ornE = 0.0002;
  ornims = 0.00045;
  ornmat = 1e-06;
  pi_ = 0.0001;
  ppi = 1e-06;
  ppiE = 1e-06;
  ure = 1e-06;
  ureE = 1e-06;
  ureR = 0;
  ureRE = 0;

  // Variable initializations:
  Kiarg = 0.0007;
  ampfinal = 5e-05;
  argfac = 1;
  aslAdj = 1;
  assAdj = 2;
  cellV = 3.868e-05;
  cytV = 2.47552e-05;
  e10 = 1.49288e-05;
  e20 = 6.25e-06;
  e30 = 3.4375e-06;
  e40 = 1.20984e-05;
  e40E = 2.28177e-08;
  eV = 0.00196132;
  fm = 1;
  fmE = 1;
  fumfinal = 1e-05;
  imsV = 4.09389e-06;
  k10e2 = 640000;
  k11e2 = 50;
  k12e2 = 170000;
  k1e1 = 17000000;
  k1e2 = 240000;
  k1e3 = 2700000;
  k1e4 = 10000000;
  k2e1 = 63;
  k2e2 = 2.3;
  k2e3 = 70;
  k2e4 = 54000;
  k3e1 = 2100000;
  k3e2 = 350000;
  k3e3 = 75;
  k3e4 = 5300;
  k4e1 = 1000;
  k4e2 = 10;
  k4e3 = 1500000;
  k4e4 = 30000;
  k5e1 = 3000;
  k5e2 = 480000;
  k5e3 = 1100;
  k5e4 = 10000000;
  k6e1 = 90000;
  k6e2 = 10;
  k6e3 = 700000;
  k7e1 = 2600;
  k7e2 = 20;
  k8e1 = 500000;
  k8e2 = 890000;
  k9e2 = 50;
  kamp = 0.00630208;
  kampCE = 10000000;
  kampCEREV = 126217;
  kargCE = 10000000;
  kargCEREV = 126217;
  kargQCE = 10000000;
  kargQCEREV = 126217;
  kargRCE = 10000000;
  kargRCEREV = 126217;
  kasCE = 10000000;
  kasCEREV = 126217;
  kasRCE = 10000000;
  kasRCEREV = 126217;
  kasp = 0.000315104;
  kaspCE = 10000000;
  kaspCEREV = 126217;
  katp = 0.000157552;
  katpCE = 10000000;
  katpCEREV = 126217;
  kcitCE = 10000000;
  kcitCEREV = 126217;
  kcitRCE = 10000000;
  kcitRCEREV = 126217;
  kcitci = 10000;
  kcitic = 60468.6;
  kcitim = 100;
  kcitmi = 60.7717;
  kcp = 2.65143e-07;
  kcpeCE = 10000000;
  kcpeCEREV = 126217;
  kcpeRCE = 10000000;
  kcpeRCEREV = 126217;
  kcpei = 10000;
  kcpie = 60468.6;
  kcpim = 0.822751;
  kcpmi = 0.5;
  kfum = 0.0315104;
  kfumCE = 10000000;
  kfumCEREV = 126217;
  kornCE = 10000000;
  kornCEREV = 126217;
  kornci = 10000;
  kornic = 60468.6;
  kornim = 110;
  kornmi = 66.8489;
  kpi = 0.0231588;
  kppi = 0.0315104;
  kppiCE = 10000000;
  kppiCEREV = 126217;
  kure = 0.315104;
  kureCE = 10000000;
  kureCEREV = 126217;
  kureRCE = 10000000;
  kureRCEREV = 126217;
  matV = 6.73651e-06;
  mitoV = 1.08304e-05;
  nucV = 3.0944e-06;
  otcAdj = 1;
  pifinal = 5e-05;
  ppifinal = 1e-05;
  sampleV = 0.002;
  steadyStateUreaProdn = 7.80047e-12;
  urefinal = 1e-06;

  // Other declarations:
  var Kiarg, ampfinal, argfac, aslAdj, assAdj, cellV, cytV, e10, e20, e30;
  var e40, e40E, eV, fm, fmE, fumfinal, imsV, k10e2, k11e2, k12e2, k1e1, k1e2;
  var k1e3, k1e4, k2e1, k2e2, k2e3, k2e4, k3e1, k3e2, k3e3, k3e4, k4e1, k4e2;
  var k4e3, k4e4, k5e1, k5e2, k5e3, k5e4, k6e1, k6e2, k6e3, k7e1, k7e2, k8e1;
  var k8e2, k9e2, kamp, kampCE, kampCEREV, kargCE, kargCEREV, kargQCE, kargQCEREV;
  var kargRCE, kargRCEREV, kasCE, kasCEREV, kasRCE, kasRCEREV, kasp, kaspCE;
  var kaspCEREV, katp, katpCE, katpCEREV, kcitCE, kcitCEREV, kcitRCE, kcitRCEREV;
  var kcitci, kcitic, kcitim, kcitmi, kcp, kcpeCE, kcpeCEREV, kcpeRCE, kcpeRCEREV;
  var kcpei, kcpie, kcpim, kcpmi, kfum, kfumCE, kfumCEREV, kornCE, kornCEREV;
  var kornci, kornic, kornim, kornmi, kpi, kppi, kppiCE, kppiCEREV, kure;
  var kureCE, kureCEREV, kureRCE, kureRCEREV, matV, mitoV, nucV, otcAdj, pifinal;
  var ppifinal, sampleV, steadyStateUreaProdn, urefinal;
end

maher1 is "maher1"
