// Created by libAntimony v2.13.2
model *dallaman1()

  // Compartments and Species:
  substanceOnly species G_p, G_t, I_1, I_d, I_l, I_p, I_po, Q_gut, Q_sto1;
  substanceOnly species Q_sto2, X, Y;

  // Assignment Rules:
  E := piecewise(k_e1*(G_p - k_e2), G_p > k_e2, 0, G_p <= k_e2);
  EGP := k_p1 - k_p2*G_p - k_p3*I_d - k_p4*I_po;
  G := G_p/V_G;
  HE := -m_5*S + m_6;
  S := gamma_*I_po;
  I := I_p/V_I;
  Q_sto := Q_sto1 + Q_sto2;
  Ra := f*k_abs*Q_gut/BW;
  S_po := piecewise(Y + S_b, derG < 0, Y + S_b, G < G_b, Y + K*derG + S_b, derG >= 0, Y + K*derG + S_b, G >= G_b);
  derG := ((EGP + Ra - E - U_ii - k_1*G_p) + k_2*G_t)/V_G;
  U := U_ii + U_id;
  U_id := U_idm + U_idf;
  U_idm := V_mmax*G_t/(K_m0 + G_t);
  U_idf := V_fmax*G_t/(K_f0 + G_t);
  V_fmax := part*(V_f0 + V_fX*X);
  V_mmax := (1 - part)*(V_m0 + V_mX*X);
  aa := 5/2/(1 - b)/D;
  cc := 5/2/d/D;
  k_empt := k_min + ((k_max - k_min)/2)*((tanh(aa*(Q_sto - b*D)) - tanh(cc*(Q_sto - d*D))) + 2);
  m_3 := HE*m_1/(1 - HE);

  // Reactions:
  Glucose_equilibration: G_t -> G_p; k_2*G_t - k_1*G_p;
  Glucose_production_endogenous:  -> G_p; EGP;
  Glucose_rate_of_appearance:  -> G_p; Ra;
  Glucose_renal_excretion: G_p -> ; E;
  Glucose_utilisation_insulin_dep: G_t -> ; U_id;
  Glucose_utilisation_insulin_indep: G_p -> ; U_ii;
  Gut_absorption: Q_gut -> ; k_abs*Q_gut;
  Insulin_anticipated:  -> I_1; k_i*I - k_i*I_1;
  Insulin_degradation_liver: I_l -> ; m_3*I_l;
  Insulin_degradation_periphery: I_p -> ; I_p*m_4;
  Insulin_delayed: I_1 -> I_d; k_i*I_1 - k_i*I_d;
  Insulin_portal_vein:  -> I_po; -gamma_*I_po + S_po;
  Insulin_rateofappearance_betacell:  -> Y; piecewise(S_b, (beta*(G - G_b)) < -S_b, -alpha*(Y - beta*(G - G_b)));
  Insulin_secretion_liver:  -> I_l; S;
  Insulin_transport_plasma_liver: I_l -> I_p; m_1*I_l - m_2*I_p;
  Interstitial_insulin:  -> X; -p_2U*X + p_2U*(I - I_b);
  Stomach_emptying: Q_sto2 -> Q_gut; k_empt*Q_sto2;
  Stomach_grinding: Q_sto1 -> Q_sto2; k_gri*Q_sto1;

  // Species initializations:
  G_p = 178;
  G_p has mgperkg_per_volume;
  G_t = 135;
  G_t has mgperkg_per_volume;
  I_1 = 25;
  I_1 has pmolperl;
  I_d = 25;
  I_d has pmolperl;
  I_l = 4.5;
  I_l has pmolperkg_per_volume;
  I_p = 1.25;
  I_p has pmolperkg_per_volume;
  I_po = 3.6;
  I_po has pmolperkg_per_volume;
  Q_gut = 0;
  Q_gut has mg_per_volume;
  Q_sto1 = 78000;
  Q_sto1 has mg_per_volume;
  Q_sto2 = 0;
  Q_sto2 has mg_per_volume;
  X = 0;
  X has pmolperl;
  Y = 0;
  Y has pmolperkgpermin_per_volume;

  // Variable initializations:
  BW = 78;
  BW has kg;
  D = 78000;
  D has mg;
  E has mgperkgpermin;
  k_e1 = 0.0005;
  k_e1 has permin;
  k_e2 = 339;
  k_e2 has mgperkg;
  EGP has mgperkgpermin;
  k_p1 = 2.7;
  k_p1 has mgperkgpermin;
  k_p2 = 0.0021;
  k_p2 has permin;
  k_p3 = 0.009;
  k_p3 has mgperkgpermin_per_pmolperl;
  k_p4 = 0.0618;
  k_p4 has mgperkgpermin_per_pmolperkg;
  G has mgperdl;
  V_G = 1.88;
  V_G has dlperkg;
  G_b = 95;
  G_b has mgperdl;
  HE has dimensionless;
  m_5 = 0.0304;
  m_5 has min_kgperpmol;
  S has pmolperkgpermin;
  m_6 = 0.6471;
  m_6 has dimensionless;
  HE_b = 0.6;
  HE_b has dimensionless;
  I has pmolperl;
  V_I = 0.05;
  V_I has lperkg;
  I_b = 25;
  I_b has pmolperl;
  K = 2.3;
  K has pmolperkg_per_mgperdl;
  K_f0 = 225.59;
  K_f0 has mgperkg;
  K_m0 = 225.59;
  K_m0 has mgperkg;
  Q_sto has mg;
  Ra has mgperkgpermin;
  f = 0.9;
  f has dimensionless;
  k_abs = 0.057;
  k_abs has permin;
  gamma_ = 0.5;
  gamma_ has permin;
  S_b = 1.8;
  S_b has pmolperkgpermin;
  S_po has pmolperkgpermin;
  derG has mgperdLpermin;
  TotalModel = 1;
  TotalModel has dimensionless;
  U has mgperkgpermin;
  U_ii = 1;
  U_ii has mgperkgpermin;
  U_id has mgperkgpermin;
  U_idm has mgperkgpermin;
  U_idf has mgperkgpermin;
  V_fmax has mgperkgpermin;
  V_mmax has mgperkgpermin;
  V_f0 = 2.5;
  V_f0 has mgperkgpermin;
  V_fX = 0.047;
  V_fX has mgperkgpermin_per_pmolperl;
  part = 0.2;
  part has dimensionless;
  V_m0 = 2.5;
  V_m0 has mgperkgpermin;
  V_mX = 0.047;
  V_mX has mgperkgpermin_per_pmolperl;
  aa has mg;
  b = 0.82;
  b has dimensionless;
  alpha = 0.05;
  alpha has permin;
  beta = 0.11;
  beta has pmolperkgpermin_per_mgperdl;
  cc has mg;
  d = 0.01;
  d has dimensionless;
  k_1 = 0.065;
  k_1 has permin;
  k_2 = 0.079;
  k_2 has permin;
  k_empt has permin;
  k_min = 0.008;
  k_min has permin;
  k_max = 0.0558;
  k_max has permin;
  k_gri = 0.0558;
  k_gri has permin;
  k_i = 0.0079;
  k_i has permin;
  m_1 = 0.19;
  m_1 has permin;
  m_2 = 0.484;
  m_2 has permin;
  m_3 has permin;
  m_4 = 0.194;
  m_4 has permin;
  p_2U = 0.0331;
  p_2U has permin;

  // Other declarations:
  var BW, D, E, k_e1, k_e2, EGP, k_p1, k_p2, k_p3, k_p4, G, V_G, G_b, HE;
  var m_5, S, m_6, HE_b, I, V_I, I_b, K, K_f0, K_m0, Q_sto, Ra, f, k_abs;
  var gamma_, S_b, S_po, derG, TotalModel, U, U_ii, U_id, U_idm, U_idf, V_fmax;
  var V_mmax, V_f0, V_fX, part, V_m0, V_mX, aa, b, alpha, beta, cc, d, k_1;
  var k_2, k_empt, k_min, k_max, k_gri, k_i, m_1, m_2, m_3, m_4, p_2U;

  // Unit definitions:
  unit min = 60 second;
  unit permin = 1 / 60 second;
  unit mgperkgpermin_per_pmolperkg = 1e-6 kilogram * kilogram / (kilogram * 60 second * 1e-12 mole);
  unit dl = 1e-1 litre;
  unit mg = 1e-6 kilogram;
  unit dlperkg = 1e-1 litre / kilogram;
  unit pmol = 1e-12 mole;
  unit lperkg = litre / kilogram;
  unit permg = 1 / 1e-6 kilogram;
  unit pmolperkg = 1e-12 mole / kilogram;
  unit mgperkg = 1e-6 kilogram / kilogram;
  unit kg = kilogram;
  unit min_kgperpmol = 60 second * kilogram / 1e-12 mole;
  unit mgperdl = 1e-6 kilogram / 1e-1 litre;
  unit pmolperl = 1e-12 mole / litre;
  unit mgperkgpermin_per_dlperkg = 1e-6 kilogram * kilogram / (kilogram * 60 second * 1e-1 litre);
  unit pmolperkgpermin = 1e-12 mole / (kilogram * 60 second);
  unit mgperdLpermin = 1e-6 kilogram / (60 second * 1e-1 litre);
  unit mgperkgpermin = 1e-6 kilogram / (kilogram * 60 second);
  unit pmolperkgpermin_per_mgperdl = 1e-1 litre * 1e-12 mole / (kilogram * 60 second * 1e-6 kilogram);
  unit pmolperkg_per_mgperdl = 1e-12 mole * 1e-1 litre / (1e-6 kilogram * kilogram);
  unit mgperkgpermin_per_pmolperl = 1e-6 kilogram * litre / (1e-12 mole * kilogram * 60 second);
  unit time_unit = min;
  unit volume = litre;
  unit mgperkg_per_volume = 1e-6 kilogram / (kilogram * litre);
  unit pmolperkg_per_volume = 1e-12 mole / (kilogram * litre);
  unit mg_per_volume = 1e-6 kilogram / litre;
  unit pmolperkgpermin_per_volume = 1e-12 mole / (kilogram * 60 second * litre);

  // Display Names:
  permin is "/min";
  mgperkgpermin_per_pmolperkg is "mg/kg/min per pmol/kg";
  dlperkg is "dl/kg";
  lperkg is "l/kg";
  permg is "/mg";
  pmolperkg is "pmol/kg";
  mgperkg is "mg/kg";
  min_kgperpmol is "min*kg/pmol";
  mgperdl is "mg/dl";
  pmolperl is "pmol/l";
  mgperkgpermin_per_dlperkg is "mg/kg/min per dl/kg";
  pmolperkgpermin is "pmol/kg/min";
  mgperdLpermin is "mg/dl/min";
  mgperkgpermin is "mg/kg/min";
  pmolperkgpermin_per_mgperdl is "pmol/kg/min per mg/dl";
  pmolperkg_per_mgperdl is "pmol/kg per mg/dl";
  mgperkgpermin_per_pmolperl is "mg/kg/min per pmol/l";
  gamma_ is "gamma";
end

dallaman1 is "dallaman1"
