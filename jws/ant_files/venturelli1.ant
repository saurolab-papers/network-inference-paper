// Created by libAntimony v2.13.2
model *venturelli1()

  // Compartments and Species:
  species $x1, $x10, $x11, $x12, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, xBH;
  species xBO, xBT, xBU, xBV, xCA, xCH, xDP, xEL, xER, xFP, xPC;

  // Assignment Rules:
  fBH := xBH/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fBO := xBO/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fBT := xBT/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fBU := xBU/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fBV := xBV/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fCA := xCA/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fCH := xCH/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fDP := xDP/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fEL := xEL/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fER := xER/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fFP := xFP/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);
  fPC := xPC/(xBH + xCA + xBU + xPC + xBO + xBV + xBT + xEL + xFP + xCH + xDP + xER);

  // Reactions:
  v1: $x1 -> xBH; xBH*(uBH + xBH*aBHBH + xCA*aBHCA + xBU*aBHBU + xPC*aBHPC + xBO*aBHBO + xBV*aBHBV + xBT*aBHBT + xEL*aBHEL + xFP*aBHFP + xCH*aBHCH + xDP*aBHDP + xER*aBHER);
  v10: $x10 -> xCH; xCH*(uCH + xBH*aCHBH + xCA*aCHCA + xBU*aCHBU + xPC*aCHPC + xBO*aCHBO + xBV*aCHBV + xBT*aCHBT + xEL*aCHEL + xFP*aCHFP + xCH*aCHCH + xDP*aCHDP + xER*aCHER);
  v11: $x11 -> xDP; xDP*(uDP + xBH*aDPBH + xCA*aDPCA + xBU*aDPBU + xPC*aDPPC + xBO*aDPBO + xBV*aDPBV + xBT*aDPBT + xEL*aDPEL + xFP*aDPFP + xCH*aDPCH + xDP*aDPDP + xER*aDPER);
  v12: $x12 -> xER; xER*(uER + xBH*aERBH + xCA*aERCA + xBU*aERBU + xPC*aERPC + xBO*aERBO + xBV*aERBV + xBT*aERBT + xEL*aEREL + xFP*aERFP + xCH*aERCH + xDP*aERDP + xER*aERER);
  v2: $x2 -> xCA; xCA*(uCA + xBH*aCABH + xCA*aCACA + xBU*aCABU + xPC*aCAPC + xBO*aCABO + xBV*aCABV + xBT*aCABT + xEL*aCAEL + xFP*aCAFP + xCH*aCACH + xDP*aCADP + xER*aCAER);
  v3: $x3 -> xBU; xBU*(uBU + xBH*aBUBH + xCA*aBUCA + xBU*aBUBU + xPC*aBUPC + xBO*aBUBO + xBV*aBUBV + xBT*aBUBT + xEL*aBUEL + xFP*aBUFP + xCH*aBUCH + xDP*aBUDP + xER*aBUER);
  v4: $x4 -> xPC; xPC*(uPC + xBH*aPCBH + xCA*aPCCA + xBU*aPCBU + xPC*aPCPC + xBO*aPCBO + xBV*aPCBV + xBT*aPCBT + xEL*aPCEL + xFP*aPCFP + xCH*aPCCH + xDP*aPCDP + xER*aPCER);
  v5: $x5 -> xBO; xBO*(uBO + xBH*aBOBH + xCA*aBOCA + xBU*aBOBU + xPC*aBOPC + xBO*aBOBO + xBV*aBOBV + xBT*aBOBT + xEL*aBOEL + xFP*aBOFP + xCH*aBOCH + xDP*aBODP + xER*aBOER);
  v6: $x6 -> xBV; xBV*(uBV + xBH*aBVBH + xCA*aBVCA + xBU*aBVBU + xPC*aBVPC + xBO*aBVBO + xBV*aBVBV + xBT*aBVBT + xEL*aBVEL + xFP*aBVFP + xCH*aBVCH + xDP*aBVDP + xER*aBVER);
  v7: $x7 -> xBT; xBT*(uBT + xBH*aBTBH + xCA*aBTCA + xBU*aBTBU + xPC*aBTPC + xBO*aBTBO + xBV*aBTBV + xBT*aBTBT + xEL*aBTEL + xFP*aBTFP + xCH*aBTCH + xDP*aBTDP + xER*aBTER);
  v8: $x8 -> xEL; xEL*(uEL + xBH*aELBH + xCA*aELCA + xBU*aELBU + xPC*aELPC + xBO*aELBO + xBV*aELBV + xBT*aELBT + xEL*aELEL + xFP*aELFP + xCH*aELCH + xDP*aELDP + xER*aELER);
  v9: $x9 -> xFP; xFP*(uFP + xBH*aFPBH + xCA*aFPCA + xBU*aFPBU + xPC*aFPPC + xBO*aFPBO + xBV*aFPBV + xBT*aFPBT + xEL*aFPEL + xFP*aFPFP + xCH*aFPCH + xDP*aFPDP + xER*aFPER);

  // Events:
  event24: at 0 after time > 24, t0=false, persistent=false: xER = 0.05*xER, xDP = 0.05*xDP, xCH = 0.05*xCH, xFP = 0.05*xFP, xEL = 0.05*xEL, xBT = 0.05*xBT, xBV = 0.05*xBV, xBO = 0.05*xBO, xPC = 0.05*xPC, xBU = 0.05*xBU, xCA = 0.05*xCA, xBH = 0.05*xBH;
  event48: at 0 after time > 48, t0=false, persistent=false: xER = 0.05*xER, xDP = 0.05*xDP, xCH = 0.05*xCH, xFP = 0.05*xFP, xPC = 0.05*xPC, xBU = 0.05*xBU, xCA = 0.05*xCA, xBH = 0.05*xBH, xEL = 0.05*xEL, xBT = 0.05*xBT, xBV = 0.05*xBV, xBO = 0.05*xBO;

  // Species initializations:
  x1 = 1;
  x10 = 1;
  x11 = 1;
  x12 = 1;
  x2 = 1;
  x3 = 1;
  x4 = 1;
  x5 = 1;
  x6 = 1;
  x7 = 1;
  x8 = 1;
  x9 = 1;
  xBH = 0.01;
  xBO = 0.01;
  xBT = 0.01;
  xBU = 0.01;
  xBV = 0.01;
  xCA = 0.01;
  xCH = 0.01;
  xDP = 0.01;
  xEL = 0.01;
  xER = 0.01;
  xFP = 0.01;
  xPC = 0.01;

  // Variable initializations:
  aBHBH = -0.7905;
  aBHBO = 0;
  aBHBT = 0;
  aBHBU = 0;
  aBHBV = 0;
  aBHCA = 0;
  aBHCH = 0;
  aBHDP = 0;
  aBHEL = 0;
  aBHER = 0;
  aBHFP = 0;
  aBHPC = 0;
  aBOBH = 0;
  aBOBO = -1.082;
  aBOBT = 0;
  aBOBU = 0;
  aBOBV = 0;
  aBOCA = 0;
  aBOCH = 0;
  aBODP = 0;
  aBOEL = 0;
  aBOER = 0;
  aBOFP = 0;
  aBOPC = 0;
  aBTBH = 0;
  aBTBO = 0;
  aBTBT = -1.1639;
  aBTBU = 0;
  aBTBV = 0;
  aBTCA = 0;
  aBTCH = 0;
  aBTDP = 0;
  aBTEL = 0;
  aBTER = 0;
  aBTFP = 0;
  aBTPC = 0;
  aBUBH = 0;
  aBUBO = 0;
  aBUBT = 0;
  aBUBU = -1.1205;
  aBUBV = 0;
  aBUCA = 0;
  aBUCH = 0;
  aBUDP = 0;
  aBUEL = 0;
  aBUER = 0;
  aBUFP = 0;
  aBUPC = 0;
  aBVBH = 0;
  aBVBO = 0;
  aBVBT = 0;
  aBVBU = 0;
  aBVBV = -0.7535;
  aBVCA = 0;
  aBVCH = 0;
  aBVDP = 0;
  aBVEL = 0;
  aBVER = 0;
  aBVFP = 0;
  aBVPC = 0;
  aCABH = 0;
  aCABO = 0;
  aCABT = 0;
  aCABU = 0;
  aCABV = 0;
  aCACA = -0.7839;
  aCACH = 0;
  aCADP = 0;
  aCAEL = 0;
  aCAER = 0;
  aCAFP = 0;
  aCAPC = 0;
  aCHBH = 0;
  aCHBO = 0;
  aCHBT = 0;
  aCHBU = 0;
  aCHBV = 0;
  aCHCA = 0;
  aCHCH = -1.4921;
  aCHDP = 0;
  aCHEL = 0;
  aCHER = 0;
  aCHFP = 0;
  aCHPC = 0;
  aDPBH = 0;
  aDPBO = 0;
  aDPBT = 0;
  aDPBU = 0;
  aDPBV = 0;
  aDPCA = 0;
  aDPCH = 0;
  aDPDP = -0.6553;
  aDPEL = 0;
  aDPER = 0;
  aDPFP = 0;
  aDPPC = 0;
  aELBH = 0;
  aELBO = 0;
  aELBT = 0;
  aELBU = 0;
  aELBV = 0;
  aELCA = 0;
  aELCH = 0;
  aELDP = 0;
  aELEL = -0.6457;
  aELER = 0;
  aELFP = 0;
  aELPC = 0;
  aERBH = 0;
  aERBO = 0;
  aERBT = 0;
  aERBU = 0;
  aERBV = 0;
  aERCA = 0;
  aERCH = 0;
  aERDP = 0;
  aEREL = 0;
  aERER = -0.5581;
  aERFP = 0;
  aERPC = 0;
  aFPBH = 0;
  aFPBO = 0;
  aFPBT = 0;
  aFPBU = 0;
  aFPBV = 0;
  aFPCA = 0;
  aFPCH = 0;
  aFPDP = 0;
  aFPEL = 0;
  aFPER = 0;
  aFPFP = -0.5218;
  aFPPC = 0;
  aPCBH = 0;
  aPCBO = 0;
  aPCBT = 0;
  aPCBU = 0;
  aPCBV = 0;
  aPCCA = 0;
  aPCCH = 0;
  aPCDP = 0;
  aPCEL = 0;
  aPCER = 0;
  aPCFP = 0;
  aPCPC = -0.5146;
  uBH = 0.2972;
  uBO = 0.7332;
  uBT = 0.8777;
  uBU = 0.7689;
  uBV = 0.5834;
  uCA = 0.3454;
  uCH = 0.7103;
  uDP = 0.2082;
  uEL = 0.1715;
  uER = 0.0904;
  uFP = 0.1619;
  uPC = 0.1262;

  // Other declarations:
  var aBHBH, aBHBO, aBHBT, aBHBU, aBHBV, aBHCA, aBHCH, aBHDP, aBHEL, aBHER;
  var aBHFP, aBHPC, aBOBH, aBOBO, aBOBT, aBOBU, aBOBV, aBOCA, aBOCH, aBODP;
  var aBOEL, aBOER, aBOFP, aBOPC, aBTBH, aBTBO, aBTBT, aBTBU, aBTBV, aBTCA;
  var aBTCH, aBTDP, aBTEL, aBTER, aBTFP, aBTPC, aBUBH, aBUBO, aBUBT, aBUBU;
  var aBUBV, aBUCA, aBUCH, aBUDP, aBUEL, aBUER, aBUFP, aBUPC, aBVBH, aBVBO;
  var aBVBT, aBVBU, aBVBV, aBVCA, aBVCH, aBVDP, aBVEL, aBVER, aBVFP, aBVPC;
  var aCABH, aCABO, aCABT, aCABU, aCABV, aCACA, aCACH, aCADP, aCAEL, aCAER;
  var aCAFP, aCAPC, aCHBH, aCHBO, aCHBT, aCHBU, aCHBV, aCHCA, aCHCH, aCHDP;
  var aCHEL, aCHER, aCHFP, aCHPC, aDPBH, aDPBO, aDPBT, aDPBU, aDPBV, aDPCA;
  var aDPCH, aDPDP, aDPEL, aDPER, aDPFP, aDPPC, aELBH, aELBO, aELBT, aELBU;
  var aELBV, aELCA, aELCH, aELDP, aELEL, aELER, aELFP, aELPC, aERBH, aERBO;
  var aERBT, aERBU, aERBV, aERCA, aERCH, aERDP, aEREL, aERER, aERFP, aERPC;
  var aFPBH, aFPBO, aFPBT, aFPBU, aFPBV, aFPCA, aFPCH, aFPDP, aFPEL, aFPER;
  var aFPFP, aFPPC, aPCBH, aPCBO, aPCBT, aPCBU, aPCBV, aPCCA, aPCCH, aPCDP;
  var aPCEL, aPCER, aPCFP, aPCPC, fBH, fBO, fBT, fBU, fBV, fCA, fCH, fDP;
  var fEL, fER, fFP, fPC, uBH, uBO, uBT, uBU, uBV, uCA, uCH, uDP, uEL, uER;
  var uFP, uPC;
end

venturelli1 is "venturelli1"
