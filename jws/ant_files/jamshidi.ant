// Created by libAntimony v2.13.2
function pkVM(PHI, TEMP)
  piecewise((300 - 90.9*(PHI - 7.2))*exp(20.61 - 6379.6/TEMP)*250/300, PHI > 7.21, (300 - 113.6*(7.2 - PHI))*exp(20.61 - 6379.6/TEMP)*250/300);
end

pkVM is "pkVM"


model *jamshidi()

  // Compartments and Species:
  species ADE, ADO, ADP, AMP, ATP, DHAP, DPG13, DPG23, E4P, F6P, FDP, G6P;
  species GAP, GL6P, GO6P, GSH, $GSHex, HX, $HXex, IMP, INO, KI, $KLEak, LAC;
  species $LACEXT, MG, MGADP, MGAMP, MGATP, MGDPG23, NADH, NADPH, NAI, $NALEak;
  species PEP, PG2, PG3, PRPP, PYR, $PYREXT, R1P, R5P, RU5P, S7P, X5P, $adeex;
  species $adoex, $inoex;

  // Assignment Rules:
  AG16PD1 := KG16PD1*KG16PD3*(KG16PD5*KG16PD9*KG16PD11 + KG16PD6*KG16PD9*KG16PD11);
  ATPF := ATP - MGATP;
  BG16PD1 := KG16PD1*KG16PD3*(KG16PD7*KG16PD9*KG16PD11 + KG16PD5*KG16PD7*KG16PD9);
  CG16PD1 := KG16PD1*KG16PD3*KG16PD5*KG16PD7*KG16PD11;
  DALD1 := KALD1*KALD3*(KALD6 + KALD7);
  DALD2 := KALD5*KALD7*(KALD2 + KALD3);
  DALD3 := KALD2*KALD4*(KALD6 + KALD7);
  DALD4 := KALD6*KALD8*(KALD2 + KALD3);
  DALD5 := KALD1*KALD5*(KALD3 + KALD7);
  DALD6 := KALD4*KALD8*(KALD2 + KALD6);
  DALD7 := KALD5*KALD8*(KALD2 + KALD3);
  DALD8 := KALD1*KALD4*(KALD6 + KALD7);
  DENG16PD := DENG16PD1 + DENG16PD2 + DENG16PD3 + DENG16PD4 + DENG16PD5 + DENG16PD6 + DENG16PD7;
  DENG16PD1 := DG16PD1 + (DG16PD2*NADP + DG16PD3*GO6P + DG16PD4*CO2 + DG16PD5*NADPH)*1*10^-3;
  DENG16PD2 := (DG16PD6*NADP*GO6P + DG16PD7*NADP*CO2 + DG16PD8*GO6P*NADPH)*1*10^-6;
  DENG16PD3 := (DG16PD9*CO2*RU5P + DG16PD10*CO2*NADPH + DG16PD11*RU5P*NADPH)*1*10^-6;
  DENG16PD4 := (DG16PD12*NADP*GO6P*CO2 + DG16PD13*NADP*GO6P*RU5P)*1*10^-9;
  DENG16PD5 := (DG16PD14*NADP*CO2*RU5P + DG16PD15*GO6P*RU5P*NADPH)*1*10^-9;
  DENG16PD6 := DENG16PD6A + DENG16PD6B;
  DENG16PD7 := DG16PD18*GO6P*CO2*RU5P*NADPH*1*10^-12;
  DG16PD1 := KG16PD2*KG16PD9*KG16PD11*(KG16PD4*KG16PD6 + KG16PD4*KG16PD7 + KG16PD5*KG16PD7);
  DG16PD2 := KG16PD1*KG16PD9*KG16PD11*(KG16PD4*KG16PD6 + KG16PD4*KG16PD7 + KG16PD5*KG16PD7);
  NADP := NADPHT - NADPH;
  DG16PD3 := KG16PD3*KG16PD5*KG16PD7*KG16PD9*KG16PD11;
  DG16PD4 := KG16PD2*KG16PD4*KG16PD6*KG16PD8*KG16PD11;
  DG16PD5 := KG16PD2*KG16PD9*KG16PD12*(KG16PD4*KG16PD6 + KG16PD4*KG16PD7 + KG16PD5*KG16PD7);
  DG16PD6 := AG16PD1 + BG16PD1 + CG16PD1;
  DG16PD7 := KG16PD1*KG16PD4*KG16PD6*KG16PD8*KG16PD11;
  DG16PD8 := KG16PD3*KG16PD5*KG16PD7*KG16PD9*KG16PD12;
  DG16PD9 := KG16PD2*KG16PD4*KG16PD6*KG16PD8*KG16PD10;
  DG16PD10 := KG16PD2*KG16PD4*KG16PD6*KG16PD8*KG16PD12;
  DG16PD11 := KG16PD2*KG16PD10*KG16PD12*(KG16PD4*KG16PD6 + KG16PD4*KG16PD7 + KG16PD5*KG16PD7);
  DG16PD12 := KG16PD1*KG16PD3*KG16PD8*KG16PD11*(KG16PD5 + KG16PD6);
  DG16PD13 := KG16PD1*KG16PD3*KG16PD5*KG16PD7*KG16PD10;
  DG16PD14 := KG16PD1*KG16PD4*KG16PD6*KG16PD8*KG16PD10;
  DG16PD15 := KG16PD3*KG16PD5*KG16PD7*KG16PD10*KG16PD12;
  DENG16PD6A := DG16PD16*CO2*RU5P*NADPH*1*10^-9;
  DENG16PD6B := DG16PD17*NADP*GO6P*CO2*RU5P*1*10^-12;
  DG16PD16 := KG16PD8*KG16PD10*KG16PD12*(KG16PD2*KG16PD4 + KG16PD2*KG16PD5 + KG16PD2*KG16PD6 + KG16PD4*KG16PD6);
  DG16PD17 := KG16PD1*KG16PD3*KG16PD8*KG16PD10*(KG16PD5 + KG16PD6);
  DG16PD18 := KG16PD3*KG16PD8*KG16PD10*KG16PD12*(KG16PD5 + KG16PD6);
  DENG6PD1 := DG6PD1 + (DG6PD2*NADP + DG6PD3*G6P + DG6PD4*GL6P + DG6PD5*NADPH)*1*10^-3;
  DG6PD1 := KG6PD2*KG6PD9*(KG6PD4*KG6PD6 + KG6PD4*KG6PD7 + KG6PD5*KG6PD7);
  DG6PD2 := KG6PD1*KG6PD9*(KG6PD4*KG6PD6 + KG6PD4*KG6PD7 + KG6PD5*KG6PD7);
  DG6PD3 := KG6PD3*KG6PD5*KG6PD7*KG6PD9;
  DG6PD4 := KG6PD2*KG6PD4*KG6PD6*KG6PD8;
  DG6PD5 := KG6PD2*KG6PD10*(KG6PD4*KG6PD6 + KG6PD4*KG6PD7 + KG6PD5*KG6PD7);
  DENG6PD2 := (DG6PD6*NADP*G6P + DG6PD7*NADP*GL6P + DG6PD8*G6P*NADPH)*1*10^-6;
  DG6PD6 := KG6PD1*KG6PD3*(KG6PD5*KG6PD7 + KG6PD5*KG6PD9 + KG6PD6*KG6PD9 + KG6PD7*KG6PD9);
  DG6PD7 := KG6PD1*KG6PD4*KG6PD6*KG6PD8;
  DG6PD8 := KG6PD3*KG6PD5*KG6PD7*KG6PD10;
  DENG6PD3 := DG6PD9*GL6P*NADPH*1*10^-6 + DG6PD10*NADP*G6P*GL6P*1*10^-9;
  DG6PD9 := KG6PD8*KG6PD10*(KG6PD2*KG6PD4 + KG6PD2*KG6PD5 + KG6PD2*KG6PD6 + KG6PD4*KG6PD6);
  DG6PD10 := KG6PD1*KG6PD3*KG6PD8*(KG6PD5 + KG6PD6);
  DENG6PD4 := DG6PD11*G6P*GL6P*NADPH*1*10^-9;
  DG6PD11 := KG6PD3*KG6PD8*KG6PD10*(KG6PD5 + KG6PD6);
  DENG6PDH := DENG6PD1 + DENG6PD2 + DENG6PD3 + DENG6PD4;
  DENPUMP := DENPUMP1 + DENPUMP2*DENPUMP3;
  DENPUMP1 := KSPUMP*KSPPUMP + 2*KSPPUMP*KE + KE^2;
  DENPUMP2 := (KNAPUMP/NAI + 1)^3;
  DENPUMP3 := KPUMP1*KSPUMP*KSPPUMP + KPUMP2*(KE^2 + PSIPUMP*KSPPUMP*KE);
  DENTALD := DALD1*S7P + DALD2*GAP + DALD3*E4P + DALD4*F6P + DALD5*S7P*GAP + DALD6*E4P*F6P + DALD7*GAP*F6P + DALD8*S7P*E4P;
  DENTKII := DTKII1*X5P + DTKII2*E4P + DTKII3*GAP + DTKII4*F6P + DTKII5*X5P*E4P + DTKII6*GAP*F6P + DTKII7*E4P*F6P + DTKII8*X5P*GAP;
  DTKII1 := KTKII1*KTKII3*(KTKII6 + KTKII7);
  DTKII2 := KTKII5*KTKII7*(KTKII2 + KTKII3);
  DTKII3 := KTKII2*KTKII4*(KTKII6 + KTKII7);
  DTKII4 := KTKII6*KTKII8*(KTKII2 + KTKII3);
  DTKII5 := KTKII1*KTKII5*(KTKII3 + KTKII7);
  DTKII6 := KTKII4*KTKII8*(KTKII2 + KTKII6);
  DTKII7 := KTKII5*KTKII8*(KTKII2 + KTKII3);
  DTKII8 := KTKII1*KTKII4*(KTKII6 + KTKII7);
  FATP := ATP/(ATP + 0.04);
  GSSG := 0.5*(GSSGT - GSH);
  HE := 10^-PHE*1000;
  HI := HE/((92/100)*RT);
  KAMPAS := 1.648/(1 + HI/(2.5642*10^-3) + 1.2159*10^-6/HI);
  KDPGM := piecewise(0, PHI < 6.85, 2.75*10^5*exp(16.907 - 5236.7/TEMP));
  PHI := -log10(HI) + 3;
  KEN2 := KEN1/KEN;
  KGA2 := KGA1/KGAPDH;
  KIASE := 0.09*1.0431/(1 + HI/(2.5642*10^-3) + 1.2159*10^-6/HI);
  KLD2 := KLD1/KLDH;
  KPGM2 := KPGM1/KPGM;
  LPFK := pfkLO*(1 + ATPF/pfkKATP)^4*(1 + MG/pfkKMG)^4/((1 + F6P/pfkKF6P)^4*(1 + AMP/pfkKAMP)^4);
  pfkKATP := exp(-5.8693*10^-2 + 0.32796*PHI)/1000;
  MG16PD1 := KG16PD1*KG16PD3*KG16PD5*KG16PD7*KG16PD9*KG16PD11*exp(17.896 - 5546.8/TEMP)*ETG16PD;
  MG16PD2 := KG16PD2*KG16PD4*KG16PD6*KG16PD8*KG16PD10*KG16PD12*exp(17.896 - 5546.8/TEMP)*ETG16PD;
  MG6PD1 := (KG6PD1*KG6PD3*KG6PD5*KG6PD7*KG6PD9*1.1631/(1 + HI/(3.867*10^-4)))*exp(14.167 - 4380.4/TEMP)*ETG6PD;
  MG6PD2 := (KG6PD2*KG6PD4*KG6PD6*KG6PD8*KG6PD10*1.1631/(1 + HI/(3.867*10^-4)))*exp(14.167 - 4380.4/TEMP)*ETG6PD;
  N1HK := 1 + GLC/KGLC + (1 + GLC/KMAGLC)*MGATP/KMGATP + (1 + GLC/KGLC)*MG/KMG + (1 + GLC/KMAGLC)*MGATP*MG/KMGATP/KMGAMG + (G6P/KG6P + GLC*G6P/KGLC/Kglcg6p + G16P/KG16P + (GLC/KGLC)*CONSTHK)*(1 + MG/KMG) + (1 + GLC/KGLC)*(DPG23/KPG23 + MG*DPG23/KMG/KMGPG);
  NAD := NADHT - NADH;
  NALD1 := KALD1*KALD3*KALD5*KALD7;
  NALD2 := NALD1/KEQALD;
  NTKII1 := KTKII1*KTKII3*KTKII5*KTKII7;
  NTKII2 := NTKII1/KEQTKII;
  NUMG16PD := MG16PD1*NADP*GO6P*36.7065*10^-3 - MG16PD2*CO2*RU5P*NADPH*36.7065*10^-6;
  NUMG6PDH := (MG6PD1*NADP*G6P - MG6PD2*GL6P*NADPH)*1*10^-6;
  NUMPUMP := VMPUMP*(KE^2 + KSPPUMP*KE*PSIPUMP*0.5);
  VMPUMP := 2.318/(1 + HI/(3.7342*10^-3) + 8.2714*10^-7/HI);
  SV := S/V;
  VLAC := -KLAC*(LACEXT - LAC);
  VM1HK := (7.5095/(1 + HI/(2.2718*10^-4) + 4.6015*10^-6/HI))*exp(18.21 - 5637.9/TEMP);
  VMPRPPSYN := 0.5054*1.6548/(1 + HI/(1.0099*10^-4) + 1.8835*10^-6/HI);
  VRPRPPSYN := VMPRPPSYN/7.5;
  adaVM := (36.348/(1 + HI/(1.995*10^-4) + 3.162*10^-5/HI))*exp(19.876 - 6152.2/TEMP);
  adkKADK := adkk0*(MG + adkK1)*(MG + adkK3)/(MG + adkK2)/(MG + adkK2);
  adkKAP1 := 200*0.272;
  adkKAP2 := adkKAP1/adkKADK;
  adprtVM := (0.202/(1 + HI/(3.981*10^-5) + 3.162*10^-7/HI))*exp(23.356 - 7240.2/TEMP);
  akVM := (8.6229/(1 + 1.636*10^-4/HI))*exp(19.876 - 6152.2/TEMP);
  aldD1 := aldK5*(aldK3 + aldK2);
  aldD2 := aldK1*(aldK3 + aldK5);
  aldD3 := aldK2*aldK4;
  aldD4 := aldK6*(aldK3 + aldK2);
  aldD5 := aldK1*aldK4;
  aldD6 := aldK4*aldK6;
  aldN1 := aldK1*aldK3*aldK5;
  aldN2 := aldN1/aldkeq;
  dpgasek := 0.5208*exp(-8.0287 + 0.98217*PHI);
  dpgmk := (17778/10000)*exp(-144503/10000 + (148/100)*PHI);
  gshconst := 1.1429*10^-3*exp(5.0476 - 1567.2/TEMP);
  gssgD1 := gssgK2*gssgK9*gssgK11*(gssgK4*gssgK6 + gssgK4*gssgK7 + gssgK5*gssgK7);
  gssgD10 := gssgK2*gssgK4*gssgK6*gssgK8*gssgK12;
  gssgD11 := gssgK2*gssgK10*gssgK12*(gssgK4*gssgK6 + gssgK4*gssgK7 + gssgK5*gssgK7);
  gssgD12 := gssgK1*gssgK3*gssgK8*gssgK11*(gssgK5 + gssgK6);
  gssgD13 := gssgK1*gssgK3*gssgK5*gssgK7*gssgK10;
  gssgD14 := gssgK1*gssgK4*gssgK6*gssgK8*gssgK10;
  gssgD15 := gssgK3*gssgK5*gssgK7*gssgK10*gssgK12;
  gssgD16 := gssgK8*gssgK10*gssgK12*(gssgK2*gssgK4 + gssgK2*gssgK5 + gssgK2*gssgK6 + gssgK4*gssgK6);
  gssgD17 := gssgK1*gssgK3*gssgK8*gssgK10*(gssgK5 + gssgK6);
  gssgD18 := gssgK3*gssgK8*gssgK10*gssgK12*(gssgK5 + gssgK6);
  gssgD2 := gssgK1*gssgK9*gssgK11*(gssgK4*gssgK6 + gssgK4*gssgK7 + gssgK5*gssgK7);
  gssgD3 := gssgK3*gssgK5*gssgK7*gssgK9*gssgK11;
  gssgD4 := gssgK2*gssgK4*gssgK6*gssgK8*gssgK11;
  gssgD5 := gssgK2*gssgK9*gssgK12*(gssgK4*gssgK6 + gssgK4*gssgK7 + gssgK5*gssgK7);
  gssgD6 := gssgK1*gssgK3*(gssgK5*gssgK9*gssgK11 + gssgK6*gssgK9*gssgK11 + gssgK7*gssgK9*gssgK11 + gssgK5*gssgK7*gssgK9 + gssgK5*gssgK7*gssgK11);
  gssgD7 := gssgK1*gssgK4*gssgK6*gssgK8*gssgK11;
  gssgD8 := gssgK3*gssgK5*gssgK7*gssgK9*gssgK12;
  gssgD9 := gssgK2*gssgK4*gssgK6*gssgK8*gssgK10;
  gssgDEN := gssgDEN1 + gssgDEN2 + gssgDEN3 + gssgDEN4 + gssgDEN5 + gssgDEN6 + gssgDEN7;
  gssgDEN1 := gssgD1 + (gssgD2*NADPH + gssgD3*GSSG + gssgD4*GSH + gssgD5*NADP)*1*10^-3;
  gssgDEN2 := (gssgD6*NADPH*GSSG + gssgD7*NADPH*GSH + gssgD8*GSSG*NADP)*1*10^-6;
  gssgDEN3 := gssgD9*GSH*GSH*1*10^-6 + (gssgD10 + gssgD11)*GSH*NADP*1*10^-6;
  gssgDEN4 := (gssgD12 + gssgD13)*NADPH*GSSG*GSH*1*10^-9;
  gssgDEN5 := (gssgD14*NADPH*GSH*GSH + gssgD15*GSSG*GSH*NADP)*1*10^-9;
  gssgDEN6 := gssgD16*GSH*GSH*NADP*1*10^-9 + gssgD17*NADPH*GSSG*GSH*GSH*1*10^-12;
  gssgDEN7 := gssgD18*GSSG*GSH*GSH*NADP*1*10^-12;
  gssgM1 := gssgK1*gssgK3*gssgK5*gssgK7*gssgK9*gssgK11*exp(15.136 - 4690.8/TEMP)*gssgET*15455.6;
  gssgM2 := gssgK2*gssgK4*gssgK6*gssgK8*gssgK10*gssgK12*exp(15.136 - 4690.8/TEMP)*gssgET*15455.6;
  gssgNUM := gssgM1*NADPH*GSSG - gssgM2*GSH*GSH*NADP;
  kV1 := (kPK*SV*ln(RT)/(RT - 1))*(KE - RT*KI);
  kV2 := kFMAXK*(KE/(kKM + KE) - KI*RT/(KI*RT + kKM));
  katpase := (0.4149938/(1 + HI/(3.7342*10^-3) + 8.2714*10^-7/HI))*exp(14.543 - 4501.5/TEMP);
  kpgi2 := kpgi1/KPGI;
  kpgk2 := kpgk1/KPG;
  naV1 := (PNA*SV*ln(RT)/(RT - 1))*(NAE - RT*NAI);
  naV2 := FMAXN*(NAE/(naKM + NAE) - NAI*RT/(NAI*RT + naKM));
  pfkVM := 250*exp(13.474 - 4174.8/TEMP);
  pkDEN1 := (MGADP/(pkKADP + MGADP))*PEP/(pkKPEP + PEP);
  pkDEN2 := (1 + ATP/pkKATP)^4;
  pkDEN3 := (1 + PEP/pkKPEP)^4*(1 + FDP/pkKFDP)^4;
  pnpaseKA2 := pnpaseKA1/pnpaseKeq;
  prmKA2 := prmKA1/prmKeq;
  tkiD := tkiD1*X5P + tkiD2*R5P + tkiD3*GAP + tkiD4*S7P + tkiD5*X5P*R5P + tkiD6*GAP*S7P + tkiD7*R5P*S7P + tkiD8*X5P*GAP;
  tkiD1 := tkiK1*tkiK3*(tkiK6 + tkiK7);
  tkiD2 := tkiK5*tkiK7*(tkiK2 + tkiK3);
  tkiD3 := tkiK2*tkiK4*(tkiK6 + tkiK7);
  tkiD4 := tkiK6*tkiK8*(tkiK2 + tkiK3);
  tkiD5 := tkiK1*tkiK5*(tkiK3 + tkiK7);
  tkiD6 := tkiK4*tkiK8*(tkiK2 + tkiK6);
  tkiD7 := tkiK5*tkiK8*(tkiK2 + tkiK3);
  tkiD8 := tkiK1*tkiK4*(tkiK6 + tkiK7);
  tkiN1 := tkiK1*tkiK3*tkiK5*tkiK7;
  tkiN2 := tkiN1/tkiKEQ;
  tpiKTP2 := tpiKTP1*tpiKTPI;

  // Reactions:
  v_1: ADO -> INO; scaleada*adaVM*ADO/(adaKA + ADO);
  v_10: ATP -> ADP; scaleatpase*katpase*ATP;
  v_11: DPG23 -> PG3; scaledpgase*dpgaseVM*DPG23/(dpgasek + DPG23);
  v_12: DPG13 -> DPG23; scaledpgm*KDPGM*DPG13/(1 + DPG23/dpgmk);
  v_13: PG2 -> PEP; scaleen*(KEN1*PG2 - KEN2*PEP)*exp(19.876 - 6152.2/TEMP);
  v_14: G6P -> GL6P + NADPH; scaleg6pd*NUMG6PDH*3600/DENG6PDH/(1*10^-3);
  v_15: GAP -> DPG13 + NADH; scalegapdh*(KGA1*PI*GAP*(NADHT - NADH) - KGA2*DPG13*NADH*HI)*exp(16.203 - 5021.3/TEMP);
  v_16: GO6P -> NADPH + RU5P; (scalegl6pd*NUMG16PD/DENG16PD)*((160.84 - 39.173*HI) + 4.1322*HI*HI);
  v_17: GSH -> $GSHex; scalegshr*gshconst*GSH*(-2880 + 902.33*PHI - 65.272*PHI*PHI);
  v_18: NADPH -> 2 GSH; (scalegssgr*gssgNUM/gssgDEN)*(-2880 + 902.33*PHI - 65.272*PHI*PHI)/233.075;
  v_19: HX + PRPP -> IMP; scalehgprt*hgprtVM*(PRPP/(PRPP + hgprtKPRPP))*(HX/(HX + hgprtKHX))*exp(14.543 - 4501.5/TEMP);
  v_2: ADE -> $adeex; scaleadeex*vmade*(ADE/(kmade + ADE) - adeex/(kmade + adeex));
  v_20: ATP -> ADP + G6P; ((scalehk*VM1HK*GLC/KMAGLC)*MGATP/KMGATP)*(1 + 2.1187*MG/KMGAMG)/N1HK;
  v_21: HX -> $HXex; scalehxex*(hxexPM*HX + hxexVM*HX/(HX + hxexKM))*exp(14.543 - 4501.5/TEMP);
  v_22: IMP -> INO; (scaleimpase*KIASE*IMP/(1 + INO/KINO))*exp(14.543 - 4501.5/TEMP);
  v_23: INO -> $inoex; vmino*(INO/(kmino + INO) - inoex/(kmino + inoex));
  v_24: $KLEak -> KI; scalekleak*(kV1 + kV2)*(-1.16 + 0.3*PHI)*exp(22.7283 - 7045.7976/TEMP);
  v_25: NADH + PYR -> LAC; scaleldh*(KLD1*PYR*NADH - KLD2*LAC*(NADHT - NADH))*exp(20.237 - 6267.2/TEMP);
  v_26: LAC -> $LACEXT; scalelex*VLAC*exp(14.543 - 4501.5/TEMP);
  v_27: $NALEak -> NAI; scalenaleak*(naV1 + naV2)*(-1.16 + 0.3*PHI)*exp(29.2222 - 9058.88/TEMP);
  v_28: ADP + MG -> MGADP; kAss*(ADP*MG/(mgadpk + MG) - MGADP);
  v_29: AMP + MG -> MGAMP; kAss*(AMP*MG/(mgampk + MG) - MGAMP);
  v_3: 2 ADP -> AMP + ATP; scaleadk*(adkKAP1*ADP^2 - adkKAP2*ATP*AMP)*exp(19.876 - 6152.2/TEMP);
  v_30: ATP + MG -> MGATP; kAss*(ATP*MG/(mgatpk + MG) - MGATP);
  v_31: DPG23 + MG -> MGDPG23; kAss*(DPG23*MG/(mgdpgk + MG) - MGDPG23);
  v_32: PYR -> $PYREXT; -scalepex*KPYR*(PYREXT - PYR)*exp(14.52096 - 4501.5/TEMP);
  v_33: ATP + F6P -> ADP + FDP; (scalepfk*pfkVM*F6P/(pfkKF6P + F6P))*MGATP/(pfkKMGATP + MGATP)/(1 + LPFK);
  v_34: G6P -> F6P; scalepgi*(kpgi1*G6P - kpgi2*F6P)*exp(13.042 - 4040.7/TEMP);
  v_35: ADP + DPG13 -> ATP + PG3; scalepgk*(kpgk1*DPG13*ADP - kpgk2*PG3*ATP)*exp(12.56 - 3895.3/TEMP);
  v_36: GL6P -> GO6P; (scalepglase*pglaseVM*GL6P/(pglaseKM + GL6P))*exp(14.167 - 4380.4/TEMP);
  v_37: PG3 -> PG2; scalepgm*(KPGM1*PG3 - KPGM2*PG2)*exp(16.907 - 5236.7/TEMP);
  v_38: PEP + ADP -> ATP + PYR; scalepk*pkVM(PHI, TEMP)*pkDEN1/(1 + pkL0*(pkDEN2/pkDEN3));
  v_39: INO -> HX + R1P; scalepnpase*(pnpaseKA1*INO*PI - pnpaseKA2*HX*R1P)*exp(14.543 - 4501.5/TEMP);
  v_4: ADO -> $adoex; scaleadoex*vmaex*(ADO/(kmaex + ADO) - adoex/(kmaex + adoex));
  v_40: R1P -> R5P; scaleprm*(prmKA1*R1P - prmKA2*R5P)*exp(14.543 - 4501.5/TEMP);
  v_41: R5P + ATP -> AMP + PRPP; (scaleprppsyn*VMPRPPSYN*VRPRPPSYN*(R5P*ATP - PRPP*AMP/KEQPRPPSYN)/(VRPRPPSYN*KR5PPRPPSYN*ATP + VRPRPPSYN*KATPPRPPSYN*R5P + VMPRPPSYN*KAMPPRPPSYN*PRPP/KEQPRPPSYN + VMPRPPSYN*KPRPPPRPPSYN*AMP/KEQPRPPSYN + VRPRPPSYN*R5P*ATP + VMPRPPSYN*PRPP*AMP/KEQPRPPSYN))*exp(14.543 - 4501.5/TEMP);
  v_42: 3 NAI + ATP -> ADP + 2 KI; (scalepump*FATP*NUMPUMP*0.5/DENPUMP)*exp(40.7298 - 12626.2626/TEMP);
  v_43: RU5P -> R5P; scaleru5pi*ru5iVF*(RU5P - R5P/ru5iKEQ)/(ru5iK1 + RU5P + (ru5iK1/ru5iK2)*R5P);
  v_44: GAP + S7P -> E4P + F6P; scaletald*(NALD1*S7P*GAP - NALD2*E4P*F6P)*ETALD/DENTALD;
  v_45: X5P + R5P -> GAP + S7P; scaletki*(tkiN1*X5P*R5P - tkiN2*GAP*S7P)*tkiET/tkiD;
  v_46: X5P + E4P -> F6P + GAP; scaletkii*(NTKII1*X5P*E4P - NTKII2*GAP*F6P)*ETTKII/DENTKII;
  v_47: DHAP -> GAP; scaletpi*(tpiKTP1*DHAP - tpiKTP2*GAP)*exp(18.475 - 5726.8/TEMP);
  v_48: RU5P -> X5P; scalexu5pe*xu5eVF*(RU5P - X5P/xu5eKEQ)/(xu5eK1 + RU5P + (xu5eK1/xu5eK2)*X5P);
  v_5: PRPP + ADE -> AMP; scaleadprt*adprtVM*(ADE/(adprtKADE + ADE))*(PRPP/(PRPP + adprtKPRPP));
  v_6: ADO + ATP -> ADP + AMP; (scaleak*akVM*ATP/(ATP + akKMGATP))*ADO/(ADO + akKA);
  v_7: FDP -> DHAP + GAP; scaleald*(aldN1*FDP - aldN2*GAP*DHAP)*aldET/(aldD1 + aldD2*FDP + aldD3*GAP + aldD4*DHAP + aldD5*FDP*GAP + aldD6*GAP*DHAP);
  v_8: AMP -> ADO; scaleampase*KAMPAS*AMP*exp(19.876 - 6152.2/TEMP);
  v_9: AMP -> IMP; (scaleampda*ampdaVM*AMP/(ampdaKAMP + AMP))*exp(19.876 - 6152.2/TEMP);

  // Species initializations:
  ADE = 0.00103;
  ADO = 5.19e-05;
  ADP = 0.492;
  AMP = 0.148;
  ATP = 2.401;
  DHAP = 0.147;
  DPG13 = 0.000228;
  DPG23 = 4.65;
  E4P = 0.00507;
  F6P = 0.0272;
  FDP = 0.01386;
  G6P = 0.066;
  GAP = 0.00669;
  GL6P = 0.001759;
  GO6P = 0.0374;
  GSH = 3.312;
  GSHex = 0;
  HX = 0.000226;
  HXex = 0;
  IMP = 0.0192;
  INO = 4.27e-05;
  KI = 139.882;
  KLEak = 0;
  LAC = 1.398;
  LACEXT = 1.2;
  MG = 0.233836;
  MGADP = 0.110216;
  MGAMP = 0.00154265;
  MGATP = 1.78328;
  MGDPG23 = 0.571129;
  NADH = 0.030592;
  NADPH = 0.0659;
  NAI = 14.135;
  NALEak = 0;
  PEP = 0.02087;
  PG2 = 0.01226;
  PG3 = 0.0839;
  PRPP = 0.0136;
  PYR = 0.062;
  PYREXT = 0.06;
  R1P = 0.0117;
  R5P = 0.01266;
  RU5P = 0.00493;
  S7P = 0.02398;
  X5P = 0.01478;
  adeex = 0.0013;
  adoex = 8e-05;
  inoex = 0.0002;

  // Variable initializations:
  KG16PD1 = 1200000;
  KG16PD3 = 1000000000;
  KG16PD5 = 48;
  KG16PD9 = 800;
  KG16PD11 = 300;
  KG16PD6 = 30;
  KG16PD7 = 630;
  CO2 = 1.2;
  CONSTHK = 1.55;
  KALD1 = 2088000;
  KALD3 = 58680;
  KALD6 = 216000;
  KALD7 = 61200;
  KALD5 = 1764000;
  KALD2 = 163080;
  KALD4 = 3636000;
  KALD8 = 284400;
  KSPUMP = 0.0617;
  KSPPUMP = 0.1328;
  KE = 5;
  KNAPUMP = 6.2672;
  KPUMP1 = 0.0082;
  KPUMP2 = 0.0501;
  PSIPUMP = 0.7114;
  KG16PD2 = 410;
  KG16PD4 = 26000;
  KG16PD8 = 36000;
  KG16PD12 = 9900000;
  KG16PD10 = 450000;
  KG6PD2 = 870;
  KG6PD9 = 10000;
  KG6PD4 = 300;
  KG6PD6 = 2000;
  KG6PD7 = 220000;
  KG6PD5 = 750;
  KG6PD1 = 110000000;
  KG6PD3 = 26000000;
  KG6PD8 = 1100000000;
  KG6PD10 = 1400000000;
  KTKII1 = 777600;
  KTKII3 = 122400;
  KTKII6 = 630000;
  KTKII7 = 144000;
  KTKII5 = 806400;
  KTKII2 = 136800;
  KTKII4 = 561600;
  KTKII8 = 76680;
  ETALD = 0.00069;
  ETG16PD = 2.1e-06;
  ETG6PD = 9.3e-08;
  ETTKII = 0.00033;
  FMAXN = 2.8166;
  G16P = 0.16;
  GLC = 5;
  GSSGT = 3.32;
  PHE = 7.4;
  RT = 0.6;
  KAMPPRPPSYN = 0.275;
  KATPPRPPSYN = 0.17;
  TEMP = 310;
  KEN = 1.708543057;
  KEN1 = 50000;
  KEQALD = 1.05;
  KEQPRPPSYN = 28.6;
  KEQTKII = 10.3;
  KG16P = 0.334;
  KG6P = 0.334;
  KGA1 = 115975;
  KGAPDH = 1.1294e-06;
  KGLC = 0.04;
  KINO = 25;
  KLAC = 12.8;
  KLD1 = 308642.2;
  KLDH = 44.64;
  KMAGLC = 0.051;
  KMG = 1.03;
  KMGAMG = 1.14;
  KMGATP = 1.13;
  KMGPG = 3.44;
  KPG = 1800;
  KPG23 = 2.7;
  KPGI = 0.41;
  KPGM = 0.1470588235;
  KPGM1 = 5000;
  KPRPPPRPPSYN = 0.09;
  KPYR = 63.8;
  KR5PPRPPSYN = 0.65;
  Kglcg6p = 0.069;
  pfkLO = 0.001072;
  pfkKMG = 0.44;
  pfkKF6P = 0.1;
  pfkKAMP = 0.033;
  MGT = 2.7;
  NADHT = 0.089;
  NADPHT = 0.066;
  NAE = 140;
  PI = 1.2;
  PNA = 3.96e-07;
  S = 1.55e-06;
  V = 8.7e-11;
  adaKA = 0.052;
  adaKII = 1.3;
  adkK1 = 0.081;
  adkK2 = 0.81;
  adkK3 = 22.2;
  adkk0 = 0.22933781;
  adprtKADE = 0.0023;
  adprtKPRPP = 0.0195;
  akKA = 0.0004;
  akKMGATP = 0.8;
  aldK5 = 252000;
  aldK3 = 6840000;
  aldK2 = 838800;
  aldK1 = 38500000;
  aldK4 = 40320000;
  aldK6 = 23076000;
  aldET = 0.00037;
  aldkeq = 0.081;
  ampdaKAMP = 0.8;
  ampdaKIMP = 2.5;
  ampdaVM = 0.01;
  dpgaseVM = 0.52;
  gssgK2 = 510;
  gssgK9 = 1000000;
  gssgK11 = 7000;
  gssgK4 = 7200;
  gssgK6 = 1000;
  gssgK7 = 1000000;
  gssgK5 = 810;
  gssgK8 = 50000000;
  gssgK12 = 100000000;
  gssgK10 = 50000000;
  gssgK1 = 85000000;
  gssgK3 = 100000000;
  gssgET = 1.25e-07;
  hgprtKHX = 0.22;
  hgprtKPRPP = 0.005;
  hgprtVM = 0.2011;
  hxexKM = 0.4;
  hxexPM = 37.8;
  hxexVM = 151.6;
  kAss = 10000;
  kFMAXK = 3.115;
  kKM = 4;
  kPK = 3.564e-07;
  kmade = 2.6;
  kmaex = 0.13;
  kmino = 0.13;
  kpgi1 = 60290;
  kpgk1 = 8633310;
  mgadpk = 0.81;
  mgampk = 22.2;
  mgatpk = 0.081;
  mgdpgk = 1.67;
  naKM = 21;
  pfkKMGATP = 0.068;
  pglaseKM = 0.08;
  pglaseVM = 9.93;
  pkKADP = 0.474;
  pkKPEP = 0.225;
  pkKATP = 3.39;
  pkKFDP = 0.005;
  pkL0 = 19;
  pnpaseKA1 = 1950;
  pnpaseKeq = 0.09;
  prmKA1 = 427.59;
  prmKeq = 13.3;
  ru5iK1 = 0.78;
  ru5iK2 = 2.2;
  ru5iKEQ = 2.57;
  ru5iVF = 1702.296;
  scaleada = 1;
  scaleadeex = 1;
  scaleadk = 1;
  scaleadoex = 1;
  scaleadprt = 1;
  scaleak = 1;
  scaleald = 1;
  scaleampase = 1;
  scaleampda = 1;
  scaleatpase = 1;
  scaledpgase = 1;
  scaledpgm = 1;
  scaleen = 1;
  scaleg6pd = 1;
  scalegapdh = 1;
  scalegl6pd = 1;
  scalegshr = 1;
  scalegssgr = 1;
  scalehgprt = 1;
  scalehk = 1;
  scalehxex = 1;
  scaleimpase = 1;
  scalekleak = 1;
  scaleldh = 1;
  scalelex = 1;
  scalenaleak = 1;
  scalepex = 1;
  scalepfk = 1;
  scalepgi = 1;
  scalepgk = 1;
  scalepglase = 1;
  scalepgm = 1;
  scalepk = 1;
  scalepnpase = 1;
  scaleprm = 1;
  scaleprppsyn = 1;
  scalepump = 1;
  scaleru5pi = 1;
  scaletald = 1;
  scaletki = 1;
  scaletkii = 1;
  scaletpi = 1;
  scalexu5pe = 1;
  tkiK1 = 777600;
  tkiK3 = 122400;
  tkiK6 = 630000;
  tkiK7 = 144000;
  tkiK5 = 1184400;
  tkiK2 = 136800;
  tkiK4 = 561600;
  tkiK8 = 161280;
  tkiET = 0.00033;
  tkiKEQ = 1.2;
  tpiEPSI = 200;
  tpiKTP1 = 31056;
  tpiKTPI = 22;
  vmade = 90;
  vmaex = 61.2;
  vmino = 61.2;
  xu5eK1 = 0.19;
  xu5eK2 = 1.5;
  xu5eKEQ = 3;
  xu5eVF = 4633.56;

  // Other declarations:
  var AG16PD1, KG16PD1, KG16PD3, KG16PD5, KG16PD9, KG16PD11, KG16PD6, ATPF;
  var BG16PD1, KG16PD7, CG16PD1, CO2, CONSTHK, DALD1, KALD1, KALD3, KALD6;
  var KALD7, DALD2, KALD5, KALD2, DALD3, KALD4, DALD4, KALD8, DALD5, DALD6;
  var DALD7, DALD8, DENG16PD, DENG16PD1, DENG16PD2, DENG16PD3, DENG16PD4;
  var DENG16PD5, DENG16PD6, DENG16PD7, DG16PD1, DG16PD2, NADP, DG16PD3, DG16PD4;
  var DG16PD5, DG16PD6, DG16PD7, DG16PD8, DG16PD9, DG16PD10, DG16PD11, DG16PD12;
  var DG16PD13, DG16PD14, DG16PD15, DENG16PD6A, DENG16PD6B, DG16PD16, DG16PD17;
  var DG16PD18, DENG6PD1, DG6PD1, DG6PD2, DG6PD3, DG6PD4, DG6PD5, DENG6PD2;
  var DG6PD6, DG6PD7, DG6PD8, DENG6PD3, DG6PD9, DG6PD10, DENG6PD4, DG6PD11;
  var DENG6PDH, DENPUMP, DENPUMP1, DENPUMP2, DENPUMP3, KSPUMP, KSPPUMP, KE;
  var KNAPUMP, KPUMP1, KPUMP2, PSIPUMP, DENTALD, DENTKII, DTKII1, DTKII2;
  var DTKII3, DTKII4, DTKII5, DTKII6, DTKII7, DTKII8, KG16PD2, KG16PD4, KG16PD8;
  var KG16PD12, KG16PD10, KG6PD2, KG6PD9, KG6PD4, KG6PD6, KG6PD7, KG6PD5;
  var KG6PD1, KG6PD3, KG6PD8, KG6PD10, KTKII1, KTKII3, KTKII6, KTKII7, KTKII5;
  var KTKII2, KTKII4, KTKII8, ETALD, ETG16PD, ETG6PD, ETTKII, FATP, FMAXN;
  var G16P, GLC, GSSG, GSSGT, HE, PHE, HI, RT, KAMPAS, KAMPPRPPSYN, KATPPRPPSYN;
  var KDPGM, PHI, TEMP, KEN, KEN1, KEN2, KEQALD, KEQPRPPSYN, KEQTKII, KG16P;
  var KG6P, KGA1, KGA2, KGAPDH, KGLC, KIASE, KINO, KLAC, KLD1, KLD2, KLDH;
  var KMAGLC, KMG, KMGAMG, KMGATP, KMGPG, KPG, KPG23, KPGI, KPGM, KPGM1, KPGM2;
  var KPRPPPRPPSYN, KPYR, KR5PPRPPSYN, Kglcg6p, LPFK, pfkLO, pfkKATP, pfkKMG;
  var pfkKF6P, pfkKAMP, MG16PD1, MG16PD2, MG6PD1, MG6PD2, MGT, N1HK, NAD;
  var NADHT, NADPHT, NAE, NALD1, NALD2, NTKII1, NTKII2, NUMG16PD, NUMG6PDH;
  var NUMPUMP, VMPUMP, PI, PNA, S, SV, V, VLAC, VM1HK, VMPRPPSYN, VRPRPPSYN;
  var adaKA, adaKII, adaVM, adkK1, adkK2, adkK3, adkKADK, adkk0, adkKAP1;
  var adkKAP2, adprtKADE, adprtKPRPP, adprtVM, akKA, akKMGATP, akVM, aldD1;
  var aldK5, aldK3, aldK2, aldD2, aldK1, aldD3, aldK4, aldD4, aldK6, aldD5;
  var aldD6, aldET, aldN1, aldN2, aldkeq, ampdaKAMP, ampdaKIMP, ampdaVM, dpgaseVM;
  var dpgasek, dpgmk, gshconst, gssgD1, gssgK2, gssgK9, gssgK11, gssgK4, gssgK6;
  var gssgK7, gssgK5, gssgD10, gssgK8, gssgK12, gssgD11, gssgK10, gssgD12;
  var gssgK1, gssgK3, gssgD13, gssgD14, gssgD15, gssgD16, gssgD17, gssgD18;
  var gssgD2, gssgD3, gssgD4, gssgD5, gssgD6, gssgD7, gssgD8, gssgD9, gssgDEN;
  var gssgDEN1, gssgDEN2, gssgDEN3, gssgDEN4, gssgDEN5, gssgDEN6, gssgDEN7;
  var gssgET, gssgM1, gssgM2, gssgNUM, hgprtKHX, hgprtKPRPP, hgprtVM, hxexKM;
  var hxexPM, hxexVM, kAss, kFMAXK, kKM, kPK, kV1, kV2, katpase, kmade, kmaex;
  var kmino, kpgi1, kpgi2, kpgk1, kpgk2, mgadpk, mgampk, mgatpk, mgdpgk, naKM;
  var naV1, naV2, pfkKMGATP, pfkVM, pglaseKM, pglaseVM, pkDEN1, pkKADP, pkKPEP;
  var pkDEN2, pkKATP, pkDEN3, pkKFDP, pkL0, pnpaseKA1, pnpaseKA2, pnpaseKeq;
  var prmKA1, prmKA2, prmKeq, ru5iK1, ru5iK2, ru5iKEQ, ru5iVF, scaleada, scaleadeex;
  var scaleadk, scaleadoex, scaleadprt, scaleak, scaleald, scaleampase, scaleampda;
  var scaleatpase, scaledpgase, scaledpgm, scaleen, scaleg6pd, scalegapdh;
  var scalegl6pd, scalegshr, scalegssgr, scalehgprt, scalehk, scalehxex, scaleimpase;
  var scalekleak, scaleldh, scalelex, scalenaleak, scalepex, scalepfk, scalepgi;
  var scalepgk, scalepglase, scalepgm, scalepk, scalepnpase, scaleprm, scaleprppsyn;
  var scalepump, scaleru5pi, scaletald, scaletki, scaletkii, scaletpi, scalexu5pe;
  var tkiD, tkiD1, tkiD2, tkiD3, tkiD4, tkiD5, tkiD6, tkiD7, tkiD8, tkiK1;
  var tkiK3, tkiK6, tkiK7, tkiK5, tkiK2, tkiK4, tkiK8, tkiET, tkiKEQ, tkiN1;
  var tkiN2, tpiEPSI, tpiKTP1, tpiKTP2, tpiKTPI, vmade, vmaex, vmino, xu5eK1;
  var xu5eK2, xu5eKEQ, xu5eVF;

  // Unit definitions:
  unit mM = 1e-3 mole / litre;
  unit L = litre;
  unit mmol = 1e-3 mole;
  unit h = 60 second;
  unit volume = L;
  unit substance = mmol;
  unit extent = mM;
  unit time_unit = h;
end

jamshidi is "jamshidi"
