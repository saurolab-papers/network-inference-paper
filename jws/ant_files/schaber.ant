// Created by libAntimony v2.13.2
model *schaber()

  // Compartments and Species:
  species FREP, Fus3, Fus3PP, Gbg, Kss1, Kss1PP, PREP, Ste11, Ste11P, Ste11Ubi;
  species Ste12, Ste12Kss1, Ste12P, Ste12TeSte5, Ste12TeSte5Kss1, Ste12TeSte5P;
  species Ste5, Ste5Ste11, Ste5Ste11Gbg, Ste5Ste11GbgFus3, Ste5Ste11GbgFus3P;
  species Ste5Ste11GbgKss1, Ste5Ste11GbgKss1P, Ste5Ste11GbgP, $p, $s;

  // Assignment Rules:
  alpha := alphastim*(piecewise(1, ((time - alphat)*(alphae - time)) >= 0, 0)*alphaA*(1 - exp(-(time - alphat)/alphas)) + piecewise(1, (time - alphae) >= 0, 0)*alphaA*exp(-(time - alphae)/alphas));
  beta := betastim*(piecewise(1, ((time - betat)*(betae - time)) >= 0, 0)*betaA*(1 - exp(-(time - betat)/betas)) + piecewise(1, (time - betae) >= 0, 0)*betaA*exp(-(time - betae)/betas));

  // Reactions:
  v_1: Ste5 + Ste11 -> Ste5Ste11; k1*Ste5*Ste11;
  v_10: Ste5Ste11GbgKss1 -> Ste5Ste11GbgKss1P; k10*Ste5Ste11GbgKss1;
  v_11: Ste5Ste11GbgKss1P -> Ste5Ste11GbgP + Kss1PP; k11*Ste5Ste11GbgKss1P;
  v_12: Ste5Ste11GbgP + Kss1 -> Ste5Ste11GbgKss1P; k12*Ste5Ste11GbgP*Kss1;
  v_13: Ste11 -> Ste11P; k13*Ste11*beta;
  v_14: Ste11P -> Ste11; k14*Ste11P;
  v_15: Kss1 -> Kss1PP; k15*Kss1*Ste11P + k30*Kss1*Ste11Ubi;
  v_16: Kss1PP -> Kss1; k16*Kss1PP + k28*Kss1PP*Fus3PP;
  v_17: Ste12Kss1 -> 2 Kss1 + Ste12; k17*Ste12Kss1;
  v_18: 2 Kss1 + Ste12 -> Ste12Kss1; k18*Kss1*Ste12;
  v_19: Ste12 -> Ste12P; k19*Ste12*Fus3PP + k29*Ste12*Kss1PP;
  v_2: Ste5Ste11 + Gbg -> Ste5Ste11Gbg; k2*Ste5Ste11*Gbg*alpha;
  v_20: $s -> PREP; k20*Ste12P;
  v_21: Ste12TeSte5Kss1 -> Kss1 + Ste12TeSte5; k21*Ste12TeSte5Kss1;
  v_22: Kss1 + Ste12TeSte5 -> Ste12TeSte5Kss1; k22*Kss1*Ste12TeSte5;
  v_23: Ste12TeSte5 -> Ste12TeSte5P; k23*Ste12TeSte5*Kss1PP;
  v_24: Ste12TeSte5 -> $p; k24*Ste12TeSte5*Fus3PP;
  v_25: $s -> FREP; k25*Ste12TeSte5P;
  v_26: Fus3PP -> Fus3; k26*Fus3PP;
  v_27: Ste5Ste11 -> Ste5 + Ste11; k27*Ste5Ste11;
  v_28: Ste12P -> Ste12; k31*Ste12P;
  v_29: PREP -> $p; k32*PREP;
  v_3: Ste5Ste11Gbg + Fus3 -> Ste5Ste11GbgFus3; k3*Ste5Ste11Gbg*Fus3;
  v_30: Ste12TeSte5P -> Ste12TeSte5; k33*Ste12TeSte5P;
  v_31: FREP -> $p; k34*FREP;
  v_4: Ste5Ste11GbgFus3 -> Ste5Ste11GbgFus3P; k4*Ste5Ste11GbgFus3;
  v_5: Ste5Ste11GbgFus3P -> Fus3PP + Ste5Ste11GbgP; k5*Ste5Ste11GbgFus3P;
  v_6: Fus3 + Ste5Ste11GbgP -> Ste5Ste11GbgFus3P; k6*Fus3*Ste5Ste11GbgP;
  v_7: Ste5Ste11GbgP -> Gbg + Ste11Ubi + Ste5; k7*Ste5Ste11GbgP;
  v_8: Ste11Ubi -> $p; k8*Ste11Ubi;
  v_9: Ste5Ste11Gbg + Kss1 -> Ste5Ste11GbgKss1; k9*Ste5Ste11Gbg*Kss1;

  // Species initializations:
  FREP = 0;
  Fus3 = 217;
  Fus3PP = 0;
  Gbg = 53;
  Kss1 = 54.4;
  Kss1PP = 0;
  PREP = 0;
  Ste11 = 13.3;
  Ste11P = 0;
  Ste11Ubi = 0;
  Ste12 = 0.07;
  Ste12Kss1 = 35.9;
  Ste12P = 0;
  Ste12TeSte5 = 0.25;
  Ste12TeSte5Kss1 = 13.7;
  Ste12TeSte5P = 0;
  Ste5 = 42.3;
  Ste5Ste11 = 5.6;
  Ste5Ste11Gbg = 0;
  Ste5Ste11GbgFus3 = 0;
  Ste5Ste11GbgFus3P = 0;
  Ste5Ste11GbgKss1 = 0;
  Ste5Ste11GbgKss1P = 0;
  Ste5Ste11GbgP = 0;
  p = 0;
  s = 0;

  // Variable initializations:
  alphastim = 1;
  alphat = 0;
  alphae = 10;
  alphaA = 1;
  alphas = 2;
  betastim = 1;
  betat = 0;
  betae = 360;
  betaA = 1;
  betas = 20;
  k1 = 0.01;
  k10 = 1;
  k11 = 1;
  k12 = 1;
  k13 = 1;
  k14 = 0.1;
  k15 = 0.1;
  k16 = 0.1;
  k17 = 1;
  k18 = 10;
  k19 = 1;
  k2 = 0.01;
  k20 = 1;
  k21 = 1;
  k22 = 1;
  k23 = 1;
  k24 = 0.01;
  k25 = 1;
  k26 = 0.1;
  k27 = 1;
  k28 = 0.01;
  k29 = 0.01;
  k3 = 1;
  k30 = 0.1;
  k31 = 1;
  k32 = 1;
  k33 = 1;
  k34 = 1;
  k4 = 1;
  k5 = 1;
  k6 = 1;
  k7 = 10;
  k8 = 0.1;
  k9 = 1;

  // Other declarations:
  var alpha, alphastim, alphat, alphae, alphaA, alphas, beta, betastim, betat;
  var betae, betaA, betas, k1, k10, k11, k12, k13, k14, k15, k16, k17, k18;
  var k19, k2, k20, k21, k22, k23, k24, k25, k26, k27, k28, k29, k3, k30;
  var k31, k32, k33, k34, k4, k5, k6, k7, k8, k9;
end

schaber is "schaber"
