
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Frank2021 - Macrophage polarization
#
# is http://identifiers.org/biomodels.db/MODEL2205230001
# is http://identifiers.org/biomodels.db/BIOMD0000001060
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = function_1, name = function 1
function_(a1,Hplus_x1,S1,Hmin_x2)=((a1*Hplus_x1+S1)*Hmin_x2)


# FunctionDefinition id = function_3, name = function 3
functio_1(S_i,H_minx_j)=(S_i*H_minx_j)


# FunctionDefinition id = function_2, name = function 2
functio_2(a2,Hplus_x2)=(a2*Hplus_x2)


# Compartment: id = Macrophage, name = Macrophage, constant
par Macrophag=1.0

# Parameter:   id =  H_plus_x1, name = H_plus_x1, defined by a Rule

# Parameter:   id =  H_min_x_1, name = H_min_x_1, defined by a Rule

# Parameter:   id =  a1, name = a1, constant
par a1=5.0

# Parameter:   id =  a2, name = a2, constant
par a2=5.0

# Parameter:   id =  b1, name = b1, constant
par b1=0.05

# Parameter:   id =  b2, name = b2, constant
par b2=0.05

# Parameter:   id =  n1, name = n1, constant
par n1=6.0

# Parameter:   id =  n2, name = n2, constant
par n2=6.0

# Parameter:   id =  k1, name = k1, constant
par k1=1.0

# Parameter:   id =  k2, name = k2, constant
par k2=1.0

# Parameter:   id =  l1, name = l1, constant
par l1=1.0

# Parameter:   id =  l2, name = l2, constant
par l2=1.0

# Parameter:   id =  p1, name = p1, constant
par p1=0.5

# Parameter:   id =  p2, name = p2, constant
par p2=1.0

# Parameter:   id =  q1, name = q1, constant
par q1=5.0

# Parameter:   id =  q2, name = q2, constant
par q2=5.0

# Parameter:   id =  S1, name = S1, constant
par S1=3.75

# Parameter:   id =  S2, name = S2, constant
par S2=3.75

# Parameter:   id =  H_plus_x2, name = H_plus_x2, defined by a Rule

# Parameter:   id =  H_min_x2, name = H_min_x2, defined by a Rule

# assignmentRule: variable = H_plus_x1
H_plus_x1=x1^n1/(x1^n1+k1^n1)
aux H_plus_x1=H_plus_x1

# assignmentRule: variable = H_min_x_1
H_min_x_1=p1^l1/(p1^l1+x1^l1)
aux H_min_x_1=H_min_x_1

# assignmentRule: variable = H_plus_x2
H_plus_x2=x2^n2/(x2^n2+k2^n2)
aux H_plus_x2=H_plus_x2

# assignmentRule: variable = H_min_x2
H_min_x2=p2^l2/(p2^l2+x2^l2)
aux H_min_x2=H_min_x2

# Reaction: id = _1, name = 1

_1=Macrophag*function_(a1, H_plus_x1, S1, H_min_x2)

# Reaction: id = _2, name = 2

_2=Macrophag*Constant_(b1)

# Reaction: id = _3, name = 3

_3=Macrophag*q1*x1

# Reaction: id = _4, name = 4

_4=Macrophag*functio_2(a2, H_plus_x2)

# Reaction: id = _5, name = 5

_5=Macrophag*functio_1(S2, H_min_x_1)

# Reaction: id = _6, name = 6

_6=Macrophag*Constant_(b2)

# Reaction: id = _7, name = 7

_7=Macrophag*q2*x2

# Species:   id = x1, name = x1, affected by kineticLaw

init x1=1.2
dx1/dt=(1/(Macrophag))*(( 1.0 * _1) + ( 1.0 * _2) + (-1.0 * _3))

# Species:   id = x2, name = x2, affected by kineticLaw

init x2=2.0
dx2/dt=(1/(Macrophag))*(( 1.0 * _4) + ( 1.0 * _5) + ( 1.0 * _6) + (-1.0 * _7))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

