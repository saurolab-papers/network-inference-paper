
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Siddhartha2002 - Kinetic modelling of cancer therapies
#
# is http://identifiers.org/biomodels.db/MODEL2204120001
# is http://identifiers.org/biomodels.db/BIOMD0000001048
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Mass_action_2, name = Mass action 2
Mass_acti(b,k1,product,substrate,k2)=(b*k1*substrate-k2*product)


# FunctionDefinition id = auto_amplification, name = auto-amplification
auto_ampl(a,r,T0,Tum)=(a*r*Tum*(1-Tum/T0))


# FunctionDefinition id = Mass_action_4, name = Mass action 4
Mass_ac_1(k1,b,k2,product,modifier)=(k1*modifier-b*k2*product)


# FunctionDefinition id = function_for_cell_detachment, name = function for cell detachment
function_(n,k1,substrate,b,k2,modifier)=(n*(k1*substrate-b*k2*modifier))


# FunctionDefinition id = clearance_0, name = clearance
clearance(d,c,Tplas)=(d*c*Tplas)


# Compartment: id = Tumor, name = Tumor, constant
par Tumor=1.0

# Parameter:   id =  a, name = a, constant
par a=0.2

# Parameter:   id =  b, name = b, constant
par b=0.2

# Parameter:   id =  c, name = c, constant
par c=0.67

# Parameter:   id =  d, name = d, constant
par d=1.0

# Parameter:   id =  kf1, name = kf1, constant
par kf1=0.067

# Parameter:   id =  kf2, name = kf2, constant
par kf2=6.7E-4

# Parameter:   id =  kr1, name = kr1, constant
par kr1=6.7E-4

# Parameter:   id =  kr2, name = kr2, constant
par kr2=0.067

# Parameter:   id =  T0, name = T0, constant
par T0=3000000.0

# Parameter:   id =  n, name = n, constant
par n=10.0

# Parameter:   id =  r, name = r, constant
par r=0.069

# Reaction: id = migration_to_bloodstream, name = migration to bloodstream

migration=Tumor*Mass_acti(b, kf1, Tplas, Ttum, kr1)

# Reaction: id = clearance, name = clearance

clearan_1=Tumor*clearance(d, c, Tplas)

# Reaction: id = cell_attachment_to_new_tumor, name = cell attachment to new tumor

cell_atta=Tumor*Mass_ac_1(kf2, b, kr2, Tnew, Tplas)

# Reaction: id = new_tumor_auto_amplification, name = new tumor auto-amplification

new_tumor=Tumor*auto_ampl(a, r, T0, Tnew)

# Reaction: id = old_tumor_auto_amplification, name = old tumor auto-amplification

old_tumor=Tumor*auto_ampl(a, r, T0, Ttum)

# Reaction: id = cell_detachment, name = cell detachment

cell_deta=Tumor*function_(n, kf2, Tplas, b, kr2, Tnew)

# Species:   id = Ttum, name = Ttum, affected by kineticLaw

init Ttum=1000000.0
dTtum/dt=(1/(Tumor))*((-1.0 * migration) + ( 1.0 * old_tumor))

# Species:   id = Tplas, name = Tplas, affected by kineticLaw

init Tplas=4000000.0
dTplas/dt=(1/(Tumor))*(( 1.0 * migration) + (-1.0 * clearan_1) + (-1.0 * cell_deta))

# Species:   id = Tnew, name = Tnew, affected by kineticLaw

init Tnew=0.0
dTnew/dt=(1/(Tumor))*(( 1.0 * cell_atta) + ( 1.0 * new_tumor))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

