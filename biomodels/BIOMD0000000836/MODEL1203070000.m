
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#
# The conversion system has the following limitations:
#  - You may have to re order some reactions and Assignment Rules definition
#  - Delays are not taken into account
#  - You should change the lsode parameters (start, end, steps) to get better results
#

#
# The following line is there to be sure that Octave think that this file 
# is a script and not function file
#
1;

#
# Model name = Radosavljevic2009_BioterroristAttack_PanicProtection
#
#
function z=pow(x,y),z=x^y;endfunction
function z=root(x,y),z=y^(1/x);endfunction
function z = piecewise(varargin)
	numArgs = nargin;
	result = 0;
	foundResult = 0;
	for k=1:2: numArgs-1
		if varargin{k+1} == 1
			result = varargin{k};
			foundResult = 1;
			break;
		endif
	end
	if foundResult == 0
		result = varargin{numArgs};
	endif
z = result;
endfunction

function xdot=f(x,t)
# Compartment: id = compartment, name = compartment, constant
	compartment_compartment=1.0;
# Parameter:   id =  alpha, name = alpha
	global_par_alpha=4.0;
# Parameter:   id =  beta, name = beta
	global_par_beta=3.8;
# Parameter:   id =  gamma, name = gamma
	global_par_gamma=1.0;
# Parameter:   id =  delta, name = delta
	global_par_delta=1.0;
# Parameter:   id =  C, name = whole_population
	global_par_C=10.0;
# rateRule: variable = S
x(1) = x(3);
# rateRule: variable = P
x(2) = x(4);
	xdot=zeros(4,1);
	# rateRule: variable = S
	xdot(3) = (global_par_alpha*(1-x(1)/global_par_C)-global_par_beta*x(2))*x(1);

	# rateRule: variable = P
	xdot(4) = (-global_par_gamma+global_par_delta*x(1))*x(2);

	# Species:   id = S, name = panic_intensity, defined in a rule 
	xdot(1) = x(1);

	# Species:   id = P, name = protection+prevention_intensity, defined in a rule 
	xdot(2) = x(2);

endfunction

#Initial conditions vector
x0=zeros(4,1);
x0(3) = NaN;
x0(4) = NaN;
x0(1) = 0.01;
x0(2) = 0.01;


#Creating linespace
t=linspace(0,90,100);

#Solving equations
x=lsode("f",x0,t);

#ploting the results
plot(t,x);
