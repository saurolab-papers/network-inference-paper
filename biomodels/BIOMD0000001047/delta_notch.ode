
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Collier1996 - Delta Notch intercellular signalling and lateral inhibition
#
# is http://identifiers.org/biomodels.db/MODEL2204050001
# is http://identifiers.org/biomodels.db/BIOMD0000001047
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_delta_activation, name = Rate Law for delta activation
Rate_Law_(G,rho)=(G/rho)


# FunctionDefinition id = Rate_Law_for_delta_inhibition, name = Rate Law for delta inhibition
Rate_La_1(d,rho)=(rho*d)


# FunctionDefinition id = Rate_law_for_notch_inhibition, name = Rate law for notch inhibition
Rate_la_2(mu,n)=(mu*n)


# FunctionDefinition id = Rate_law_for_notch_activation, name = Rate law for notch activation
Rate_la_3(F)=(F)


# Compartment: id = cell_1___plasma_membrane, name = cell 1 - plasma membrane, constant
par cell_1___=1.0

# Compartment: id = cell_2___plasma_membrane, name = cell 2 - plasma membrane, constant
par cell_2___=1.0

# Parameter:   id =  a, name = a, constant
par a=0.01

# Parameter:   id =  b, name = b, constant
par b=100.0

# Parameter:   id =  G1, name = G1, defined by a Rule

# Parameter:   id =  h, name = h, constant
par h=2.0

# Parameter:   id =  k, name = k, constant
par k=2.0

# Parameter:   id =  mu, name = mu, constant
par mu=1.0

# Parameter:   id =  rho, name = rho, constant
par rho=1.0

# Parameter:   id =  G2, name = G2, defined by a Rule

# Parameter:   id =  F2, name = F2, defined by a Rule

# Parameter:   id =  F1, name = F1, defined by a Rule

# Parameter:   id =  ModelValue_0, name = Initial for a, constant
par ModelValu=0.01

# Parameter:   id =  ModelValue_1, name = Initial for b, constant
par ModelVa_1=100.0

# Parameter:   id =  ModelValue_3, name = Initial for h, constant
par ModelVa_2=2.0

# Parameter:   id =  ModelValue_4, name = Initial for k, constant
par ModelVa_3=2.0

# assignmentRule: variable = G1
G1=1/(1+ModelVa_1*notch1^ModelVa_2)
aux G1=G1

# assignmentRule: variable = G2
G2=1/(1+ModelVa_1*notch2^ModelVa_2)
aux G2=G2

# assignmentRule: variable = F1
F1=delta1^ModelVa_3/(ModelValu+delta1^ModelVa_3)
aux F1=F1

# assignmentRule: variable = F2
F2=delta2^ModelVa_3/(ModelValu+delta2^ModelVa_3)
aux F2=F2

# Reaction: id = notch1_activation, name = notch1 activation

notch1_ac=cell_1___*Rate_la_3(F2)

# Reaction: id = notch2_activation, name = notch2 activation

notch2_ac=cell_2___*Rate_la_3(F1)

# Reaction: id = delta2_activation, name = delta2 activation

delta2_ac=cell_2___*Rate_Law_(G2, rho)

# Reaction: id = delta1_activation, name = delta1 activation

delta1_ac=cell_1___*Rate_Law_(G1, rho)

# Reaction: id = delta1_inhibition, name = delta1 inhibition

delta1_in=cell_1___*Rate_La_1(delta1, rho)

# Reaction: id = delta2_inhibition, name = delta2 inhibition

delta2_in=cell_2___*Rate_La_1(delta2, rho)

# Reaction: id = notch1_inhibition, name = notch1 inhibition

notch1_in=cell_1___*Rate_la_2(mu, notch1)

# Reaction: id = notch2_inhibition, name = notch2 inhibition

notch2_in=cell_2___*Rate_la_2(mu, notch2)

# Species:   id = delta1, name = delta1, affected by kineticLaw

init delta1=0.999999999999985
ddelta1/dt=(1/(cell_1___))*(( 1.0 * delta1_ac) + (-1.0 * delta1_in))

# Species:   id = delta2, name = delta2, affected by kineticLaw

init delta2=0.99
ddelta2/dt=(1/(cell_2___))*(( 1.0 * delta2_ac) + (-1.0 * delta2_in))

# Species:   id = notch1, name = notch1, affected by kineticLaw

init notch1=0.999999999999987
dnotch1/dt=(1/(cell_1___))*(( 1.0 * notch1_ac) + (-1.0 * notch1_in))

# Species:   id = notch2, name = notch2, affected by kineticLaw

init notch2=0.99
dnotch2/dt=(1/(cell_2___))*(( 1.0 * notch2_ac) + (-1.0 * notch2_in))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

