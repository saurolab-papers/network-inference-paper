
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#
# The conversion system has the following limitations:
#  - You may have to re order some reactions and Assignment Rules definition
#  - Delays are not taken into account
#  - You should change the lsode parameters (start, end, steps) to get better results
#

#
# The following line is there to be sure that Octave think that this file 
# is a script and not function file
#
1;

#
# Model name = Mufudza2012 - Estrogen effect on the dynamics of breast cancer
#
# is urn:miriam:biomodels.db:MODEL1304190001
#
function z=pow(x,y),z=x^y;endfunction
function z=root(x,y),z=y^(1/x);endfunction
function z = piecewise(varargin)
	numArgs = nargin;
	result = 0;
	foundResult = 0;
	for k=1:2: numArgs-1
		if varargin{k+1} == 1
			result = varargin{k};
			foundResult = 1;
			break;
		endif
	end
	if foundResult == 0
		result = varargin{numArgs};
	endif
z = result;
endfunction

function xdot=f(x,t)
# Compartment: id = Tissue, name = Tissue, constant
	compartment_Tissue=1.0;
# Parameter:   id =  alpha1, name = alpha1
	global_par_alpha1=0.7;
# Parameter:   id =  alpha2, name = alpha2
	global_par_alpha2=0.98;
# Parameter:   id =  beta1, name = beta1
	global_par_beta1=0.3;
# Parameter:   id =  beta2, name = beta2
	global_par_beta2=0.4;
# Parameter:   id =  delta1, name = delta1
	global_par_delta1=1.0;
# Parameter:   id =  gamma2, name = gamma2
	global_par_gamma2=0.9;
# Parameter:   id =  s, name = s
	global_par_s=0.4;
# Parameter:   id =  rho, name = rho
	global_par_rho=0.2;
# Parameter:   id =  omega, name = omega
	global_par_omega=0.3;
# Parameter:   id =  mu, name = mu
	global_par_mu=0.29;
# Parameter:   id =  alpha3, name = alpha3
	global_par_alpha3=1.0;
# Parameter:   id =  gamma3, name = gamma3
	global_par_gamma3=0.085;
# Parameter:   id =  sigma1, name = sigma1
	global_par_sigma1=1.2;
# Parameter:   id =  sigma2, name = sigma2
	global_par_sigma2=0.94;
# Parameter:   id =  sigma3, name = sigma3
	global_par_sigma3=0.3;
# Parameter:   id =  v, name = v
	global_par_v=0.4;
# Parameter:   id =  theta, name = theta
	global_par_theta=0.8;
# Parameter:   id =  pi, name = pi
	global_par_pi=0.3;
# rateRule: variable = H
x(1) = x(5);
# rateRule: variable = T
x(2) = x(6);
# rateRule: variable = I
x(3) = x(7);
# rateRule: variable = E
x(4) = x(8);
	xdot=zeros(8,1);
	# rateRule: variable = H
	xdot(5) = x(1)*(global_par_alpha1-global_par_beta1*x(1)-global_par_delta1*x(2))-global_par_sigma1*x(1)*x(4);

	# rateRule: variable = T
	xdot(6) = x(2)*(global_par_alpha3-global_par_beta2*x(2))-global_par_gamma2*x(3)*x(2)+global_par_sigma2*x(1)*x(4);

	# rateRule: variable = I
	xdot(7) = global_par_s+global_par_rho*x(3)*x(2)/(global_par_omega+x(2))-global_par_gamma3*x(3)*x(2)-global_par_mu*x(3)-global_par_sigma3*x(3)*x(4)/(global_par_v+x(4));

	# rateRule: variable = E
	xdot(8) = global_par_pi-global_par_theta*x(4);

	# Species:   id = H, name = normal cells, defined in a rule 
	xdot(1) = x(1);

	# Species:   id = T, name = Tumour cells, defined in a rule 
	xdot(2) = x(2);

	# Species:   id = I, name = Immune cells, defined in a rule 
	xdot(3) = x(3);

	# Species:   id = E, name = 17-beta estradiol, defined in a rule 
	xdot(4) = x(4);

endfunction

#Initial conditions vector
x0=zeros(8,1);
x0(5) = NaN;
x0(6) = NaN;
x0(7) = NaN;
x0(8) = NaN;
x0(1) = 1.0;
x0(2) = 1.0E-5;
x0(3) = 1.379310345;
x0(4) = 2.0;


#Creating linespace
t=linspace(0,90,100);

#Solving equations
x=lsode("f",x0,t);

#ploting the results
plot(t,x);
